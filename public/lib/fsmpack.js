webpackJsonp([5],[function(a,b,c){a.exports=c(145)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(a,b,c){if(a.exports={MachineHandler:c(146),ProximityComponent:c(207),ProximitySystem:c(205),Action:c(151),Actions:c(149),AddLightAction:c(193),AddPositionAction:c(263),AddVariableAction:c(264),ApplyImpulseAction:c(240),ArrowsAction:c(150),CollidesAction:c(204),CompareCounterAction:c(247),CompareCountersAction:c(248),CompareDistanceAction:c(203),CopyJointTransformAction:c(237),DollyZoomAction:c(201),EmitAction:c(187),EvalAction:c(189),FireAction:c(217),GetPositionAction:c(265),HideAction:c(190),HtmlAction:c(236),InBoxAction:c(202),IncrementCounterAction:c(250),InFrustumAction:c(200),KeyDownAction:c(159),KeyPressedAction:c(160),KeyUpAction:c(158),LogMessageAction:c(234),LookAtAction:c(171),MouseDownAction:c(155),MouseMoveAction:c(156),MouseUpAction:c(154),MoveAction:c(168),MultiplyVariableAction:c(266),NumberCompareAction:c(267),PauseAnimationAction:c(178),PickAction:c(161),PickAndExitAction:c(162),RandomTransitionAction:c(186),RemoveAction:c(192),RemoveLightAction:c(195),RemoveParticlesAction:c(218),ResumeAnimationAction:c(179),RotateAction:c(169),ScaleAction:c(170),SetAnimationAction:c(180),SetClearColorAction:c(198),SetCounterAction:c(249),SetLightRangeAction:c(268),SetPositionAction:c(269),SetRenderTargetAction:c(228),SetRotationAction:c(270),SetVariableAction:c(271),ShakeAction:c(177),ShowAction:c(191),SmokeAction:c(208),SoundFadeInAction:c(226),SoundFadeOutAction:c(227),SwitchCameraAction:c(199),TagAction:c(206),TransitionAction:c(184),TransitionOnMessageAction:c(188),TriggerEnterAction:c(238),TriggerLeaveAction:c(239),TweenLightColorAction:c(197),TweenLookAtAction:c(176),TweenMoveAction:c(172),TweenOpacityAction:c(235),TweenRotationAction:c(174),TweenScaleAction:c(175),TweenTextureOffsetAction:c(231),WaitAction:c(183),WasdAction:c(167),FSMUtil:c(272),FsmUtils:c(152),Machine:c(148),State:c(147),StateMachineComponent:c(273),StateMachineSystem:c(274),StateMachineComponentHandler:c(275),StateMachineHandlers:c(276)},"undefined"!=typeof window)for(var d in a.exports)window.goo[d]=a.exports[d]},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(85),f=c(6),g=c(147),h=c(148),i=c(149),j=c(55);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,e._registerClass("machine",d),d.prototype._create=function(){return new h},d.prototype._prepare=function(a){f.defaults(a,{maxLoopDepth:100,asyncMode:!0})},d.prototype._update=function(a,b,c){var d=this;return e.prototype._update.call(this,a,b,c).then(function(e){if(e){e.id=a,e.name=b.name,e.maxLoopDepth=b.maxLoopDepth,e.asyncMode=b.asyncMode;for(var f in e._states)b.states[f]||e.removeState(f);var g=[];for(var f in b.states)g.push(d._updateState(e,b.states[f],c));return j.all(g).then(function(){return e.setInitialState(b.initialState),e})}})},d.prototype._updateActions=function(a,b){for(var c=0;c<a._actions.length;c++){var d=a._actions[c];b.actions&&b.actions[d.id]||(a.removeAction(d),c--)}var e=[];f.forEach(b.actions,function(b){var c=a.getAction(b.id);if(c)c.configure(b.options);else{var d=i.actionForType(b.type);c=new d(b.id,b.options),c.onCreate&&c.onCreate(a.proxy)}e.push(c)},null,"sortValue"),a._actions=e},d.prototype._updateTransitions=function(a,b){a._transitions={};for(var c in b.transitions){var d=b.transitions[c];a.setTransition(d.id,d.targetState)}},d.prototype._updateState=function(a,b,c){var d;a._states&&a._states[b.id]?d=a._states[b.id]:(d=new g(b.id),a.addState(d)),d.name=b.name,this._updateActions(d,b),this._updateTransitions(d,b);for(var e=0;e<d._machines;e++){var f=d._machines[e];b.childMachines[f.id]||(d.removeMachine(f),e--)}var h=[];for(var i in b.childMachines)h.push(this._load(b.childMachines[i].machineRef,c));return j.all(h).then(function(a){for(var b=0;a>b;b++)d.addMachine(a[b]);return d})},a.exports=d},function(a,b,c){function d(a){this.uuid=a,this._fsm=null,this.parent=null,this._actions=[],this._machines=[],this._transitions={},this.vars={},this.depth=0,this.proxy={getInputState:function(a){return this._fsm.system.getInputState(a)}.bind(this),getTpf:function(){return this._fsm.entity._world.tpf}.bind(this),getWorld:function(){return this._fsm.entity._world}.bind(this),getTime:function(){return this._fsm.system.time}.bind(this),getState:function(){return this}.bind(this),getFsm:function(){return this._fsm}.bind(this),getOwnerEntity:function(){return this._fsm&&this._fsm.entity}.bind(this),getEntityById:function(a){return this._fsm.entity._world.by.id(a).first()}.bind(this),send:function(a){a&&"string"==typeof a&&this._transitions[a]&&this.requestTransition(this._transitions[a])}.bind(this),addListener:function(a,b){this._fsm._bus.addListener(a,b)}.bind(this),removeListener:function(a,b){this._fsm._bus.removeListener(a,b)}.bind(this),defineVariable:function(a,b){this.vars[a]=b}.bind(this),removeVariable:function(a){delete this.vars[a]}.bind(this),getVariable:function(a){return void 0!==this.vars[a]?this.vars[a]:this._fsm.getVariable(a)}.bind(this),applyOnVariable:function(a,b){void 0!==this.vars[a]?this.vars[a]=b(this.vars[a]):this._fsm.applyOnVariable(a,b)}.bind(this),getEvalProxy:function(){return this._fsm.system.evalProxy}.bind(this)}}var e=c(86),f=c(44);d.prototype.setRefs=function(a){this._fsm=a;for(var b=0;b<this._machines.length;b++){var c=this._machines[b];c.setRefs(a)}},d.prototype.resetDepth=function(){this.depth=0},d.prototype.isCurrentState=function(){return this===this.parent.getCurrentState()},d.prototype.requestTransition=function(a){if(this.isCurrentState())if(this.parent.asyncMode)this.transitionTarget=a;else{this.depth++;var b=this._fsm;if(this.depth>this.parent.maxLoopDepth){var c={entityId:b&&b.entity?b.entity.id:"",entityName:b&&b.entity?b.entity.name:"",machineName:this.parent?this.parent.name:"",stateId:this.uuid,stateName:this.name};return c.error="Exceeded max loop depth ("+this.parent.maxLoopDepth+') in "'+[c.entityName,c.machineName,c.stateName].join('" / "')+'"',console.warn(c.error),void f.emit("goo.fsm.error",c)}a&&this.parent.contains(a)&&(this.parent.currentState.kill(),this.parent.setState(this.parent._states[a]))}},d.prototype.setTransition=function(a,b){this._transitions[a]=b},d.prototype.clearTransition=function(a){delete this._transitions[a]},d.prototype.enter=function(){f.emit("goo.fsm.enter",{entityId:this._fsm&&this._fsm.entity?this._fsm.entity.id:"",machineName:this.parent?this.parent.name:"",stateId:this.uuid,stateName:this.name});for(var a=this.depth,b=0;b<this._actions.length;b++)if(this._actions[b].enter(this.proxy),this.depth>a)return;for(var b=0;b<this._machines.length;b++)this._machines[b].enter()},d.prototype.update=function(){var a=this.depth;if(this.parent.asyncMode){for(var b=0;b<this._actions.length;b++)if(this._actions[b].update(this.proxy),this.transitionTarget){var c=this.transitionTarget;return this.transitionTarget=null,c}for(var d,b=0;b<this._machines.length;b++){var e=this._machines[b];if(d=e.update())return d}}else{for(var b=0;b<this._actions.length;b++)if(this._actions[b].update(this.proxy),this.depth>a)return;for(var b=0;b<this._machines.length;b++)this._machines[b].update()}},d.prototype.kill=function(){f.emit("goo.fsm.exit",{entityId:this._fsm&&this._fsm.entity?this._fsm.entity.id:"",machineName:this.parent?this.parent.name:"",stateId:this.uuid,stateName:this.name});for(var a=0;a<this._machines.length;a++)this._machines[a].kill();for(var a=0;a<this._actions.length;a++)this._actions[a].exit(this.proxy)},d.prototype.reset=function(){for(var a=0;a<this._machines.length;a++)this._machines[a].reset()},d.prototype.ready=function(){for(var a=0;a<this._machines.length;a++)this._machines[a].ready();for(var a=0;a<this._actions.length;a++)this._actions[a].ready(this.proxy)},d.prototype.cleanup=function(){for(var a=0;a<this._machines.length;a++)this._machines[a].cleanup();for(var a=0;a<this._actions.length;a++)this._actions[a].cleanup(this.proxy)},d.prototype.getAction=function(a){if(!this._actions)return void 0;for(var b=0;b<this._actions.length;b++){var c=this._actions[b];if(void 0!==a&&c.id===a)return c}return void 0},d.prototype.addAction=function(a){this._actions[a.id]||(a.onCreate&&a.onCreate(this.proxy),this._actions.push(a))},d.prototype.recursiveRemove=function(){this.removeAllActions();for(var a=0;a<this._machines.length;a++)this._machines[a].recursiveRemove();this._machines=[]},d.prototype.removeAllActions=function(){for(var a=0;a<this._actions.length;a++){var b=this._actions[a];b.onDestroy&&b.onDestroy(this.proxy)}this._actions=[]},d.prototype.removeAction=function(a){a.onDestroy&&a.onDestroy(this.proxy),e.remove(this._actions,a)},d.prototype.addMachine=function(a){var b=this._machines.indexOf(a);-1===b&&(a._fsm=this._fsm,a.parent=this,this._machines.push(a))},d.prototype.removeMachine=function(a){a.recursiveRemove(),e.remove(this._machines,a)},a.exports=d},function(a,b){function c(a,b){this.id=a,this.name=b,this._states={},this._fsm=null,this.initialState="entry",this.currentState=null,this.parent=null,this.maxLoopDepth=100,this.asyncMode=!1}c.prototype.setRefs=function(a){this._fsm=a;for(var b=Object.keys(this._states),c=0;c<b.length;c++){var d=this._states[b[c]];d.setRefs(a)}},c.prototype.contains=function(a){return!!this._states[a]},c.prototype.setState=function(a){this.currentState=a,this.currentState.reset(),this.currentState.enter()},c.prototype.reset=function(){this.currentState=this._states[this.initialState],this.currentState&&this.currentState.reset()},c.prototype.ready=function(){for(var a=Object.keys(this._states),b=0;b<a.length;b++){var c=this._states[a[b]];c.ready()}},c.prototype.cleanup=function(){for(var a=Object.keys(this._states),b=0;b<a.length;b++){var c=this._states[a[b]];c.cleanup()}},c.prototype.enter=function(){for(var a=Object.keys(this._states),b=0;b<a.length;b++){var c=this._states[a[b]];c.resetDepth()}this.currentState&&this.currentState.enter()},c.prototype.update=function(){for(var a=Object.keys(this._states),b=0;b<a.length;b++){var c=this._states[a[b]];c.resetDepth()}if(this.currentState){if(this.asyncMode){var d=this.currentState.update();return d&&this.contains(d)&&(this.currentState.kill(),this.setState(this._states[d])),d}this.currentState.update()}},c.prototype.kill=function(){this.currentState&&this.currentState.kill()},c.prototype.getCurrentState=function(){return this.currentState},c.prototype.addState=function(a){0===Object.keys(this._states).length&&(this.initialState=a.uuid),a.parent=this,a._fsm=this._fsm,this._states[a.uuid]=a},c.prototype.removeFromParent=function(){this.parent&&this.parent.removeMachine(this)},c.prototype.recursiveRemove=function(){for(var a=Object.keys(this._states),b=0;b<a.length;b++){var c=this._states[a[b]];c.recursiveRemove()}this._states={}},c.prototype.removeState=function(a){if(this._states[a]){if(this.initialState===a)throw new Error("Cannot remove initial state");this.currentState===this._states[a]&&this.reset(),delete this._states[a]}},c.prototype.setInitialState=function(a){this.initialState=a},a.exports=c},function(a,b,c){var d={},e=function(){},f=["Eval","HTMLPick","Remove","Collides","Tag"];e.register=function(a,b){d[a]=b},e.actionForType=function(a){return d[a]},e.allActions=function(){for(var a={},b=Object.keys(d),c=0;c<b.length;c++){var e=b[c];-1===f.indexOf(e)&&(a[e]=d[e])}return a},e.allActionsArray=function(){for(var a=[],b=e.allActions(),c=Object.keys(b),d=0;d<c.length;d++){var f=c[d];a.push(b[f])}return a};var g={ArrowsAction:c(150),DomEventAction:c(153),MouseUpAction:c(154),MouseDownAction:c(155),MouseMoveAction:c(156),MousePressedAction:c(157),KeyUpAction:c(158),KeyDownAction:c(159),KeyPressedAction:c(160),PickAction:c(161),PickAndExitAction:c(162),ClickAction:c(163),HoverEnterAction:c(164),HoverExitAction:c(166),WasdAction:c(167),MoveAction:c(168),RotateAction:c(169),ScaleAction:c(170),LookAtAction:c(171),TweenMoveAction:c(172),TweenRotationAction:c(174),TweenScaleAction:c(175),TweenLookAtAction:c(176),ShakeAction:c(177),PauseAnimationAction:c(178),ResumeAnimationAction:c(179),SetAnimationAction:c(180),SetTimeScaleAction:c(181),SetAnimationOffsetAction:c(182),WaitAction:c(183),TransitionAction:c(184),NextFrameAction:c(185),RandomTransitionAction:c(186),EmitAction:c(187),TransitionOnMessageAction:c(188),EvalAction:c(189),HideAction:c(190),ShowAction:c(191),RemoveAction:c(192),AddLightAction:c(193),RemoveLightAction:c(195),SetLightPropertiesAction:c(196),TweenLightColorAction:c(197),SetClearColorAction:c(198),SwitchCameraAction:c(199),InFrustumAction:c(200),DollyZoomAction:c(201),InBoxAction:c(202),CompareDistanceAction:c(203),CollidesAction:c(204),TagAction:c(206),SmokeAction:c(208),FireAction:c(217),RemoveParticlesAction:c(218),TogglePostFxAction:c(219),ToggleFullscreenAction:c(220),PlaySoundAction:c(222),PauseSoundAction:c(224),StopSoundAction:c(225),SoundFadeInAction:c(226),SoundFadeOutAction:c(227),SetRenderTargetAction:c(228),TweenTextureOffsetAction:c(231),SetMaterialColorAction:c(232),TweenMaterialColorAction:c(233),LogMessageAction:c(234),TweenOpacityAction:c(235),HtmlAction:c(236),CopyJointTransformAction:c(237),TriggerEnterAction:c(238),TriggerLeaveAction:c(239),ApplyImpulseAction:c(240),ApplyForceAction:c(241),ApplyTorqueAction:c(242),SetRigidBodyPositionAction:c(243),SetRigidBodyRotationAction:c(244),SetRigidBodyVelocityAction:c(245),SetRigidBodyAngularVelocityAction:c(246),CompareCounterAction:c(247),CompareCountersAction:c(248),SetCounterAction:c(249),IncrementCounterAction:c(250),MuteAction:c(251),UnmuteAction:c(252),ToggleMuteAction:c(253),StartTimelineAction:c(254),PauseTimelineAction:c(255),StopTimelineAction:c(256),SetTimelineTimeAction:c(257),SetHtmlTextAction:c(258),SpriteAnimationAction:c(259),PauseParticleSystemAction:c(260),StopParticleSystemAction:c(261),StartParticleSystemAction:c(262)};for(var h in g){var i=g[h];e.register(i.external.key,i)}a.exports=e},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f={38:"up",37:"left",40:"down",39:"right"};d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.configure=function(a){this.targets=a.transitions},d.external={key:"Arrow Keys Listener",name:"Arrow Keys",type:"controls",description:"Transitions to other states when arrow keys are pressed (keydown).",canTransition:!0,parameters:[],transitions:[{key:"up",description:"On key up pressed."},{key:"left",description:"On key left pressed."},{key:"down",description:"On key down pressed."},{key:"right",description:"On key right pressed."}]};var g={up:"On key UP",left:"On key LEFT",down:"On key DOWN",right:"On key RIGHT"};d.getTransitionLabel=function(a){return g[a]},d.prototype.enter=function(a){this.eventListener=function(b){var c=f[b.which],d=this.targets[c];d&&a.send(d)}.bind(this),document.addEventListener("keydown",this.eventListener)},d.prototype.exit=function(){document.removeEventListener("keydown",this.eventListener)},a.exports=d},function(a,b,c){function d(a,b){this.id=a,this.configure(b||{})}var e=c(152);d.prototype.configure=function(a){e.setParameters.call(this,a,this.constructor.external.parameters),e.setTransitions.call(this,a,this.constructor.external.transitions)},d.prototype.enter=function(){},d.prototype.update=function(){},d.prototype.exit=function(){},d.prototype.ready=function(){},d.prototype.cleanup=function(){},a.exports=d},function(a,b){function c(){}function d(a){for(var b=[],c=Object.keys(a),d=0;d<c.length;d++)b[a[c[d]]]=c[d];return b}c.setParameters=function(a,b){for(var c=0;c<b.length;c++){var d=b[c],e=d.key;"undefined"!=typeof a[e]?this[e]=a[e]:this[e]=d["default"]}},c.setTransitions=function(a,b){for(var c=0;c<b.length;c++){var d=b[c],e=d.key;this.transitions=this.transitions||{},this.transitions[e]=a.transitions[e]}},c.getKey=function(a){return c.keys[a]?c.keys[a]:a.charCodeAt(0)},c.keys={Backspace:8,Tab:9,Enter:13,Shift:16,Ctrl:17,Alt:18,Pause:19,Capslock:20,Esc:27,Space:32,Pageup:33,Pagedown:34,End:35,Home:36,Leftarrow:37,Uparrow:38,Rightarrow:39,Downarrow:40,Insert:45,Delete:46,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,a:65,b:66,c:67,d:68,e:69,f:70,g:71,h:72,i:73,j:74,k:75,l:76,m:77,n:78,o:79,p:80,q:81,r:82,s:83,t:84,u:85,v:86,w:87,x:88,y:89,z:90,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,"0numpad":96,"1numpad":97,"2numpad":98,"3numpad":99,"4numpad":100,"5numpad":101,"6numpad":102,"7numpad":103,"8numpad":104,"9numpad":105,Multiply:106,Plus:107,Minus:109,Dot:110,Slash1:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,Equals:187,Comma:188,Slash:191,Backslash:220},c.keyInverse=[],c.keyInverse=d(c.keys),c.keyForCode=function(a){return c.keyInverse[a]?c.keyInverse[a]:"FsmUtils.keyForCode: key not found for code "+a};var e=function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)};c.guid=function(){return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},c.getValue=function(a,b){return"number"==typeof a?a:b.getVariable(a)},a.exports=c},function(a,b,c){function d(){e.apply(this,arguments),this.domElements=null}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"domEvent",name:"DOM Event Listen",type:"misc",description:"Adds a DOM event listener on one or many elements (specified by a query selector), and performs a transition on a given event.",canTransition:!0,parameters:[{name:"Event name",key:"eventName",type:"string",description:'DOM event to listen to, for example "click", "mousedown", "keydown", etc.',"default":"click"},{name:"Query Selector",key:"querySelector",type:"string",description:'Query selector that matches your DOM element(s). For example, set "canvas" if you want to match all <canvas> elements, or ".myClass" to match all elements with your class.',"default":"body"}],transitions:[{key:"event",description:"State to transition to when the DOM event triggers."}]},d.getTransitionLabel=function(a,b){return"On "+b.options.eventName},d.prototype.enter=function(a){this.eventListener=function(){a.send(this.transitions.event)}.bind(this);for(var b=this.domElements=document.querySelectorAll(this.querySelector),c=0;c<b.length;c++)b[c].addEventListener(this.eventName,this.eventListener)},d.prototype.exit=function(){var a=this.domElements;if(a){for(var b=0;b<a.length;b++)a[b].removeEventListener(this.eventName,this.eventListener);this.domElements=null}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Mouse Up / Touch end",name:"Mouse Up / Touch end",type:"controls",description:"Listens for a mouseup event (or touchend) on the canvas and performs a transition.",canTransition:!0,parameters:[],transitions:[{key:"mouseLeftUp",description:"State to transition to when the left mouse button is released."},{key:"middleMouseUp",description:"State to transition to when the middle mouse button is released."},{key:"rightMouseUp",description:"State to transition to when the right mouse button is released."},{key:"touchUp",description:"State to transition to when the touch event ends."}]};var f={mouseLeftUp:"On left mouse up",middleMouseUp:"On middle mouse up",rightMouseUp:"On right mouse up",touchUp:"On touch end"};d.getTransitionLabel=function(a){return f[a]},d.prototype.enter=function(a){var b=function(b){"touch"===b?a.send(this.transitions.touchUp):a.send([this.transitions.mouseLeftUp,this.transitions.middleMouseUp,this.transitions.rightMouseUp][b])}.bind(this);this.mouseEventListener=function(a){b(a.button)}.bind(this),this.touchEventListener=function(){b("touch")}.bind(this),document.addEventListener("mouseup",this.mouseEventListener),document.addEventListener("touchend",this.touchEventListener)},d.prototype.exit=function(){document.removeEventListener("mouseup",this.mouseEventListener),document.removeEventListener("touchend",this.touchEventListener)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Mouse Down / Touch Start",name:"Mouse Down / Touch Start",type:"controls",description:"Listens for a mousedown event (or touchstart) on the canvas and performs a transition.",canTransition:!0,parameters:[],transitions:[{key:"mouseLeftDown",description:"State to transition to when the left mouse button is pressed."},{key:"middleMouseDown",description:"State to transition to when the middle mouse button is pressed."},{key:"rightMouseDown",description:"State to transition to when the right mouse button is pressed."},{key:"touchDown",description:"State to transition to when the touch event begins."}]};var f={mouseLeftDown:"On left mouse down",middleMouseDown:"On middle mouse down",rightMouseDown:"On right mouse down",touchDown:"On touch start"};d.getTransitionLabel=function(a){return f[a]},d.prototype.enter=function(a){var b=function(b){"touch"===b?a.send(this.transitions.touchDown):a.send([this.transitions.mouseLeftDown,this.transitions.middleMouseDown,this.transitions.rightMouseDown][b])}.bind(this);this.mouseEventListener=function(a){b(a.button)}.bind(this),this.touchEventListener=function(){b("touch")}.bind(this),document.addEventListener("mousedown",this.mouseEventListener),document.addEventListener("touchstart",this.touchEventListener)},d.prototype.exit=function(){document.removeEventListener("mousedown",this.mouseEventListener),document.removeEventListener("touchstart",this.touchEventListener)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Mouse / Touch Move",name:"Mouse / Touch Move",type:"controls",description:"Listens for mouse movement (mousemove) or touch movement (touchmove) on the canvas and performs a transition.",canTransition:!0,parameters:[],transitions:[{key:"mousemove",description:"State to transition to on mouse movement."},{key:"touchmove",description:"State to transition to on touch movement."}]};var f={mousemove:"On mouse move",touchmove:"On touch move"};d.getTransitionLabel=function(a){return f[a]},d.prototype.enter=function(a){var b=function(b){"mouse"===b?a.send(this.transitions.mousemove):a.send(this.transitions.touchmove)}.bind(this);this.mouseEventListener=function(){b("mouse")}.bind(this),this.touchEventListener=function(){b("touch")}.bind(this),document.addEventListener("mousemove",this.mouseEventListener),document.addEventListener("touchmove",this.touchEventListener)},d.prototype.exit=function(){document.removeEventListener("mousemove",this.mouseEventListener),document.removeEventListener("touchmove",this.touchEventListener)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Mouse Button Pressed",name:"Mouse Button Pressed",type:"controls",description:"Listens for a mouse button press event and performs a transition. Works over transition boundaries..",canTransition:!0,parameters:[{name:"Button",key:"button",type:"string",control:"dropdown",description:"Mouse Button to listen for.","default":"Left",options:["Left","Middle","Right"]}],transitions:[{key:"mousedown",description:"State to transition to when the mouse button is pressed."}]};var f={mousedown:"Mouse Button Pressed"};d.getTransitionLabel=function(a,b){return f[a]?"On "+b.options.button+" "+f[a]:void 0},d.prototype.enter=function(a){a.getInputState(this.button)&&a.send(this.transitions.mousedown)},d.prototype.update=function(a){a.getInputState(this.button)&&a.send(this.transitions.mousedown)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(152);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Key Up",name:"Key Up",type:"controls",description:"Listens for a key release and performs a transition.",canTransition:!0,parameters:[{name:"Key",key:"key",type:"string",control:"key",description:"Key to listen for.","default":"A"}],transitions:[{key:"keyup",description:"State to transition to when the key is released."}]},d.getTransitionLabel=function(a,b){return"On Key "+(b.options.key||"")+" up"},d.prototype.configure=function(a){this.key=a.key?f.getKey(a.key):null,this.transitions={keyup:a.transitions.keyup}},d.prototype.enter=function(a){this.eventListener=function(b){this.key&&b.which!==+this.key||a.send(this.transitions.keyup)}.bind(this),document.addEventListener("keyup",this.eventListener)},d.prototype.exit=function(){document.removeEventListener("keyup",this.eventListener)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(152);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Key Down",name:"Key Down",type:"controls",description:"Listens for a key press and performs a transition.",canTransition:!0,parameters:[{name:"Key",key:"key",type:"string",control:"key",description:"Key to listen for.","default":"A"}],transitions:[{key:"keydown",description:"State to transition to when the key is pressed."}]},d.getTransitionLabel=function(a,b){return"On Key "+(b.options.key||"")+" down"},d.prototype.configure=function(a){this.key=a.key?f.getKey(a.key):null,this.transitions={keydown:a.transitions.keydown}},d.prototype.enter=function(a){this.eventListener=function(b){this.key&&b.which===+this.key&&a.send(this.transitions.keydown)}.bind(this),document.addEventListener("keydown",this.eventListener)},d.prototype.exit=function(){document.removeEventListener("keydown",this.eventListener)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(152);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Key Pressed",name:"Key Pressed",type:"controls",description:"Listens for a key press event and performs a transition. Works over transition boundaries.",canTransition:!0,parameters:[{name:"Key",key:"key",type:"string",control:"key",description:"Key to listen for.","default":"A"}],transitions:[{key:"keydown",description:"State to transition to when the key is pressed."}]},d.getTransitionLabel=function(a,b){return"On Key "+(b.options.key||"")+" pressed"},d.prototype.configure=function(a){this.key=a.key?f.getKey(a.key):null,this.transitions={keydown:a.transitions.keydown}},d.prototype.enter=function(a){a.getInputState(this.key)&&a.send(this.transitions.keydown)},d.prototype.update=function(a){a.getInputState(this.key)&&a.send(this.transitions.keydown)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(44);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Pick",name:"Pick",type:"controls",description:"Listens for a picking event on the entity and performs a transition.",canTransition:!0,parameters:[],transitions:[{key:"pick",name:"Pick",description:"State to transition to when entity is picked."}]};var g={pick:"On pick entity"};d.getTransitionLabel=function(a){return g[a]},d.prototype.enter=function(a){this.ownerEntity=a.getOwnerEntity(),this.goo=this.ownerEntity._world.gooRunner;var b=this;this.eventListener=function(c){var d=c.entity;if(!d){var e,f,g=b.goo.renderer.domElement;if("touchstart"===c.type||"touchend"===c.type||"touchmove"===c.type)e=c.changedTouches[0].pageX-g.getBoundingClientRect().left,f=c.changedTouches[0].pageY-g.getBoundingClientRect().top;else{var h=g.getBoundingClientRect();e=c.clientX-h.left,f=c.clientY-h.top}var i=b.goo.pickSync(e,f);if(d=b.goo.world.entityManager.getEntityByIndex(i.id),!d)return}d.traverseUp(function(c){return c===b.ownerEntity?(a.send(b.transitions.pick),!1):void 0})},document.addEventListener("click",this.eventListener),document.addEventListener("touchstart",this.eventListener),f.addListener("goo.trigger.click",this.eventListener),f.addListener("goo.trigger.touchstart",this.eventListener)},d.prototype.exit=function(){document.removeEventListener("click",this.eventListener),document.removeEventListener("touchstart",this.eventListener),f.removeListener("goo.trigger.click",this.eventListener),f.removeListener("goo.trigger.touchstart",this.eventListener)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.eventListener=function(a){a.stopPropagation(),a.preventDefault();var b=this.ownerEntity.getComponent("HtmlComponent"),c=b&&b.domElement.contains(a.target);if(c)return void this.handleExit();if(a.target===this.canvasElement){var d,e;a.touches&&a.touches.length?(d=a.touches[0].clientX,e=a.touches[0].clientY):a.changedTouches&&a.changedTouches.length?(d=a.changedTouches[0].pageX,e=a.changedTouches[0].pageY):(d=a.offsetX,e=a.offsetY);var f=this.goo.pickSync(d,e);if(-1!==f.id){var g=this.goo.world.entityManager.getEntityByIndex(f.id),h=[];this.ownerEntity.traverse(h.push.bind(h)),-1!==h.indexOf(g)&&this.handleExit()}}}.bind(this)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Pick and Exit",name:"Pick and Exit",type:"controls",description:"Listens for a picking event on the entity and opens a new browser window.",canTransition:!0,parameters:[{name:"URL",key:"url",type:"string",description:"URL to open.","default":"http://www.goocreate.com/"},{name:"Exit name",key:"exitName",type:"string",description:"Name of the exit, used to track this exit in Ads.","default":"clickEntityExit"}],transitions:[]},d.prototype.enter=function(a){this.ownerEntity=a.getOwnerEntity(),this.goo=this.ownerEntity._world.gooRunner,this.canvasElement=this.goo.renderer.domElement,this.domElement=this.canvasElement.parentNode,this.domElement.addEventListener("click",this.eventListener,!1),this.domElement.addEventListener("touchend",this.eventListener,!1)},d.prototype.handleExit=function(){var a=window.gooHandleExit||function(a){window.open(a,"_blank")};a(this.url,this.exitName)},d.prototype.exit=function(){this.domElement&&(this.domElement.removeEventListener("click",this.eventListener),this.domElement.removeEventListener("touchend",this.eventListener))},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.selected=!1,this.x=0,this.y=0}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Click/Tap",name:"Click/Tap on entity",type:"controls",description:"Listens for a click/tap event on the entity and performs a transition.",canTransition:!0,parameters:[],transitions:[{key:"click",description:"State to transition to when entity is clicked."}]},d.getTransitionLabel=function(){return"On Click/Tap Entity"},d.prototype.enter=function(a){var b=this;this.downListener=function(a){var c,d,e=b.gooRunner,f=e.renderer.domElement;if("touchstart"===a.type||"touchend"===a.type)c=a.changedTouches[0].pageX-f.getBoundingClientRect().left,d=a.changedTouches[0].pageY-f.getBoundingClientRect().top;else{var g=f.getBoundingClientRect();c=a.clientX-g.left,d=a.clientY-g.top}var h=e.pickSync(c,d),i=e.world.entityManager.getEntityByIndex(h.id);i&&i.traverseUp(function(a){return a===b.ownerEntity?(b.x=c,b.y=d,b.selected=!0,!1):void 0})},this.upListener=function(c){if(b.selected){b.selected=!1;var d,e,f=b.gooRunner,g=f.renderer.domElement,h=g.getBoundingClientRect();"touchstart"===c.type||"touchend"===c.type?(d=c.changedTouches[0].pageX-h.left,e=c.changedTouches[0].pageY-h.top):(d=c.clientX-h.left,e=c.clientY-h.top);var i=b.x-d,j=b.y-e;if(!(Math.abs(i)>10||Math.abs(j)>10)){var k=f.pickSync(d,e),l=f.world.entityManager.getEntityByIndex(k.id);l&&l.traverseUp(function(c){return c===b.ownerEntity?(a.send(b.transitions.click),!1):void 0})}}},this.ownerEntity=a.getOwnerEntity(),this.gooRunner=this.ownerEntity._world.gooRunner,document.addEventListener("mousedown",this.downListener),document.addEventListener("touchstart",this.downListener),document.addEventListener("mouseup",this.upListener),document.addEventListener("touchend",this.upListener),
this.selected=!1},d.prototype.exit=function(){document.removeEventListener("mousedown",this.downListener),document.removeEventListener("touchstart",this.downListener),document.removeEventListener("mouseup",this.upListener),document.removeEventListener("touchend",this.upListener)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.first=!0,this.hit=!1}var e=c(151),f=c(165);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.types={fast:"Bounding (Fast)",slow:"Per pixel (Slow)"},d.external={key:"Hover Enter",name:"Entity Hover Enter",type:"controls",description:"Listens for a hover enter event on the entity and performs a transition.",canTransition:!0,parameters:[{name:"Accuracy",key:"type",type:"string",control:"dropdown",description:"Hover accuracy/performance selection.","default":d.types.fast,options:[d.types.fast,d.types.slow]}],transitions:[{key:"enter",description:"State to transition to when entity is entered."}]},d.getTransitionLabel=function(){return"On Entity Hover Enter"},d.prototype.enter=function(a){var b=this,c=function(a){if(!a)return!1;var c=!1;return a.traverseUp(function(a){return a===b.ownerEntity?(c=!0,!1):void 0}),c},e=function(d){var e=c(d);!b.first&&b.hit||!e||a.send(b.transitions.enter),b.first=!1,b.hit=e};this.moveListener=function(a){var c,g,h=b.goo.renderer.domElement;if("touchstart"===a.type||"touchend"===a.type||"touchmove"===a.type){var i=h.getBoundingClientRect();c=a.changedTouches[0].pageX-i.left,g=a.changedTouches[0].pageY-i.top}else{var i=h.getBoundingClientRect();c=a.clientX-i.left,g=a.clientY-i.top}var j=b.goo.renderSystem.camera,k=null;if(b.type===d.types.slow){var l=b.goo.pickSync(c,g);k=b.goo.world.entityManager.getEntityByIndex(l.id)}else{var m=f.pick(b.goo.world,j,c,g);m.length>0&&(k=m[0].entity)}e(k)},this.ownerEntity=a.getOwnerEntity(),this.goo=this.ownerEntity._world.gooRunner,document.addEventListener("mousemove",this.moveListener),document.addEventListener("touchmove",this.moveListener),this.first=!0,this.hit=!1},d.prototype.exit=function(){document.removeEventListener("mousemove",this.moveListener),document.removeEventListener("touchmove",this.moveListener)},a.exports=d},,function(a,b,c){function d(){e.apply(this,arguments),this.first=!0,this.hit=!1}var e=c(151),f=c(165);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.types={fast:"Bounding (Fast)",slow:"Per pixel (Slow)"},d.external={key:"Hover Exit",name:"Entity Hover Exit",type:"controls",description:"Listens for a hover exit event on the entity and performs a transition.",canTransition:!0,parameters:[{name:"Accuracy",key:"type",type:"string",control:"dropdown",description:"Hover accuracy/performance selection.","default":d.types.fast,options:[d.types.fast,d.types.slow]}],transitions:[{key:"exit",description:"State to transition to when entity is exited."}]},d.getTransitionLabel=function(){return"On Entity Hover Exit"},d.prototype.enter=function(a){var b=this,c=function(a){if(!a)return!1;var c=!1;return a.traverseUp(function(a){return a===b.ownerEntity?(c=!0,!1):void 0}),c},e=function(d){var e=c(d);!b.first&&!b.hit||e||a.send(b.transitions.exit),b.hit=e,b.first=!1};this.moveListener=function(a){var c,g,h=b.goo.renderer.domElement;if("touchstart"===a.type||"touchend"===a.type||"touchmove"===a.type)c=a.changedTouches[0].pageX-h.getBoundingClientRect().left,g=a.changedTouches[0].pageY-h.getBoundingClientRect().top;else{var i=h.getBoundingClientRect();c=a.clientX-i.left,g=a.clientY-i.top}var j=b.goo.renderSystem.camera,k=null;if(b.type===d.types.slow){var l=b.goo.pickSync(c,g);k=b.goo.world.entityManager.getEntityByIndex(l.id)}else{var m=f.pick(b.goo.world,j,c,g);m.length>0&&(k=m[0].entity)}e(k)},this.ownerEntity=a.getOwnerEntity(),this.goo=this.ownerEntity._world.gooRunner,document.addEventListener("mousemove",this.moveListener),document.addEventListener("touchmove",this.moveListener),this.first=!0,this.hit=!1},d.prototype.exit=function(){document.removeEventListener("mousemove",this.moveListener),document.removeEventListener("touchmove",this.moveListener)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.configure=function(a){this.targets=a.transitions};var f={87:"w",65:"a",83:"s",68:"d"};d.external=function(){var a=[];for(var b in f){var c=f[b];a.push({key:c,name:"On key "+c.toUpperCase(),description:"On key '"+c+"' pressed."})}return{key:"WASD Keys Listener",name:"WASD Keys",type:"controls",description:"Transitions to other states when the WASD keys are pressed.",canTransition:!0,parameters:[],transitions:a}}();var g={w:"On Key W Pressed",a:"On Key A Pressed",s:"On Key S Pressed",d:"On Key D Pressed"};d.getTransitionLabel=function(a){return g[a]},d.prototype.enter=function(a){this.eventListener=function(b){var c=f[b.which];if(c){var d=this.targets[c];"string"==typeof d&&a.send(d)}}.bind(this),document.addEventListener("keydown",this.eventListener)},d.prototype.exit=function(){document.removeEventListener("keydown",this.eventListener)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(8);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Move",name:"Move",type:"animation",description:"Moves the entity.",parameters:[{name:"Translation",key:"translation",type:"position",description:"Move.","default":[0,0,0]},{name:"Oriented",key:"oriented",type:"boolean",description:"If true translate with rotation.","default":!0},{name:"Relative",key:"relative",type:"boolean",description:"If true add to current translation.","default":!0},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity(),c=b.transformComponent.sync().transform;this.forward=f.fromArray(this.translation);var d=c.rotation;this.forward.applyPost(d),this.everyFrame||this.applyMove(a)},d.prototype.update=function(a){this.everyFrame&&this.applyMove(a)},d.prototype.applyMove=function(a){var b=a.getOwnerEntity(),c=b.transformComponent.sync().transform,d=c.translation;if(this.oriented)if(this.relative){var e=f.fromArray(this.translation),g=c.rotation;e.applyPost(g),this.everyFrame?(e.scale(a.getTpf()),d.add(e)):d.add(e)}else d.set(this.forward);else if(this.relative)if(this.everyFrame){var h=a.getTpf();d.addDirect(this.translation[0]*h,this.translation[1]*h,this.translation[2]*h)}else d.addDirect(this.translation[0],this.translation[1],this.translation[2]);else d.setDirect(this.translation[0],this.translation[1],this.translation[2]);b.transformComponent.setUpdated()},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(9);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Rotate",name:"Rotate",type:"animation",description:"Rotates the entity with the set angles (in degrees).",parameters:[{name:"Rotation",key:"rotation",type:"rotation",description:"Rotatation.","default":[0,0,0]},{name:"Relative",key:"relative",type:"boolean",description:"If true add to current rotation.","default":!0},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[]};var g=f.DEG_TO_RAD;d.prototype.applyRotation=function(a){var b=a.getOwnerEntity(),c=b.transformComponent.sync().transform,d=this.rotation[0],e=this.rotation[1],f=this.rotation[2];if(this.relative){var h=c.rotation;if(this.everyFrame){var i=a.getTpf();h.rotateX(d*g*i),h.rotateY(e*g*i),h.rotateZ(f*g*i)}else h.rotateX(d*g),h.rotateY(e*g),h.rotateZ(f*g)}else if(this.everyFrame){var i=a.getTpf();c.setRotationXYZ(d*g*i,e*g*i,f*g*i)}else c.setRotationXYZ(d*g,e*g,f*g);b.transformComponent.setUpdated()},d.prototype.enter=function(a){this.everyFrame||this.applyRotation(a)},d.prototype.update=function(a){this.everyFrame&&this.applyRotation(a)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Scale",name:"Scale",type:"animation",description:"Scales the entity.",parameters:[{name:"Scale",key:"scale",type:"position",description:"Scale.","default":[0,0,0]},{name:"Relative",key:"relative",type:"boolean",description:"If true, add/multiply the current scaling.","default":!0},{name:"Multiply",key:"multiply",type:"boolean",description:"If true multiply, otherwise add.","default":!1},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!1}],transitions:[]},d.prototype.applyScale=function(a){var b=a.getOwnerEntity(),c=b.transformComponent.transform;if(this.relative)if(this.multiply)if(this.everyFrame){var d=10*a.getTpf();c.scale.x*=this.scale[0]*d,c.scale.y*=this.scale[1]*d,c.scale.z*=this.scale[2]*d}else c.scale.mulDirect(this.scale[0],this.scale[1],this.scale[2]);else if(this.everyFrame){var d=10*a.getTpf();c.scale.x+=this.scale[0]*d,c.scale.y+=this.scale[1]*d,c.scale.z+=this.scale[2]*d}else c.scale.addDirect(this.scale[0],this.scale[1],this.scale[2]);else c.scale.setArray(this.scale);b.transformComponent.setUpdated()},d.prototype.enter=function(a){this.everyFrame||this.applyScale(a)},d.prototype.update=function(a){this.everyFrame&&this.applyScale(a)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(8);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Look At",name:"Look At",type:"animation",description:"Reorients an entity so that it's facing a specific point.",parameters:[{name:"Look at",key:"lookAt",type:"position",description:"Position to look at.","default":[0,0,0]},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[]},d.prototype.doLookAt=function(a){var b=a.getOwnerEntity(),c=b.transformComponent;c.transform.lookAt(new f(this.lookAt),f.UNIT_Y),c.setUpdated()},d.prototype.enter=function(a){this.everyFrame||this.doLookAt(a)},d.prototype.update=function(a){this.everyFrame&&this.doLookAt(a)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.fromPos=new f,this.toPos=new f,this.deltaPos=new f,this.oldPos=new f,this.completed=!1}var e=c(151),f=c(8),g=c(173);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Tween Move",name:"Tween Move",type:"animation",description:"Transition to the set location.",canTransition:!0,parameters:[{name:"Translation",key:"to",type:"position",description:"Move.","default":[0,0,0]},{name:"Relative",key:"relative",type:"boolean",description:"If true add, otherwise set.","default":!0},{name:"Time (ms)",key:"time",type:"float",description:"Time it takes for this movement to complete.","default":1e3},{name:"Easing type",key:"easing1",type:"string",control:"dropdown",description:"Easing type.","default":"Linear",options:["Linear","Quadratic","Exponential","Circular","Elastic","Back","Bounce"]},{name:"Direction",key:"easing2",type:"string",control:"dropdown",description:"Easing direction.","default":"In",options:["In","Out","InOut"]}],transitions:[{key:"complete",description:"State to transition to when the movement completes."}]},d.getTransitionLabel=function(a){return"complete"===a?"On Tween Move Complete":void 0},d.prototype.enter=function(a){var b=a.getOwnerEntity().transformComponent.sync();this.fromPos.set(b.transform.translation),this.toPos.setDirect(this.to[0],this.to[1],this.to[2]),this.relative&&(this.oldPos.set(this.fromPos),this.toPos.add(this.fromPos)),this.startTime=a.getTime(),this.completed=!1},d.prototype.update=function(a){if(!this.completed){var b=a.getOwnerEntity().transformComponent.sync(),c=Math.min(1e3*(a.getTime()-this.startTime)/this.time,1),d=g[this.easing1][this.easing2](c);this.relative?(this.deltaPos.set(this.fromPos).lerp(this.toPos,d).sub(this.oldPos),b.transform.translation.add(this.deltaPos),this.oldPos.add(this.deltaPos)):b.transform.translation.set(this.fromPos).lerp(this.toPos,d),b.setUpdated(),c>=1&&(a.send(this.transitions.complete),this.completed=!0)}},a.exports=d},,function(a,b,c){function d(){e.apply(this,arguments),this.quatFrom=new f,this.quatTo=new f,this.quatFinal=new f,this.completed=!1}var e=c(151),f=c(23),g=c(24),h=c(9),i=c(173);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Tween Rotation",name:"Tween Rotate",type:"animation",description:"Transition to the set rotation, in angles.",canTransition:!0,parameters:[{name:"Rotation",key:"to",type:"rotation",description:"Rotation.","default":[0,0,0]},{name:"Relative",key:"relative",type:"boolean",description:"If true add, otherwise set.","default":!0},{name:"Time (ms)",key:"time",type:"float",description:"Time it takes for this movement to complete.","default":1e3},{name:"Easing type",key:"easing1",type:"string",control:"dropdown",description:"Easing type.","default":"Linear",options:["Linear","Quadratic","Exponential","Circular","Elastic","Back","Bounce"]},{name:"Direction",key:"easing2",type:"string",control:"dropdown",description:"Easing direction.","default":"In",options:["In","Out","InOut"]}],transitions:[{key:"complete",description:"State to transition to when the rotation completes."}]},d.getTransitionLabel=function(a){return"complete"===a?"On Tween Rotation Complete":void 0},d.prototype.enter=function(a){var b=a.getOwnerEntity(),c=b.transformComponent.sync();this.startTime=a.getTime(),this.quatFrom.fromRotationMatrix(c.transform.rotation),this.quatTo.fromRotationMatrix((new g).fromAngles(this.to[0]*h.DEG_TO_RAD,this.to[1]*h.DEG_TO_RAD,this.to[2]*h.DEG_TO_RAD)),this.relative&&this.quatTo.mul(this.quatFrom),this.completed=!1},d.prototype.update=function(a){if(!this.completed){var b=a.getOwnerEntity(),c=b.transformComponent.sync().transform,d=Math.min(1e3*(a.getTime()-this.startTime)/this.time,1),e=i[this.easing1][this.easing2](d);f.slerp(this.quatFrom,this.quatTo,e,this.quatFinal),this.quatFinal.toRotationMatrix(c.rotation),b.transformComponent.setUpdated(),d>=1&&(a.send(this.transitions.complete),this.completed=!0)}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.fromScale=new f,this.toScale=new f,this.completed=!1}var e=c(151),f=c(8),g=c(173);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Tween Scale",name:"Tween Scale",type:"animation",description:"Transition to the set scale.",canTransition:!0,parameters:[{name:"Scale",key:"to",type:"position",description:"Scale.","default":[0,0,0]},{name:"Relative",key:"relative",type:"boolean",description:"If true add, otherwise set.","default":!0},{name:"Time (ms)",key:"time",type:"float",description:"Time it takes for this movement to complete.","default":1e3},{name:"Easing type",key:"easing1",type:"string",control:"dropdown",description:"Easing type.","default":"Linear",options:["Linear","Quadratic","Exponential","Circular","Elastic","Back","Bounce"]},{name:"Direction",key:"easing2",type:"string",control:"dropdown",description:"Easing direction.","default":"In",options:["In","Out","InOut"]}],transitions:[{key:"complete",description:"State to transition to when the scaling completes."}]},d.getTransitionLabel=function(a){return"complete"===a?"On Tween Scale Complete":void 0},d.prototype.enter=function(a){var b=a.getOwnerEntity().transformComponent;this.fromScale.set(b.transform.scale),this.toScale.setDirect(this.to[0],this.to[1],this.to[2]),this.relative&&this.toScale.add(this.fromScale),this.startTime=a.getTime(),this.completed=!1},d.prototype.update=function(a){if(!this.completed){var b=a.getOwnerEntity().transformComponent,c=Math.min(1e3*(a.getTime()-this.startTime)/this.time,1),d=g[this.easing1][this.easing2](c);b.transform.scale.set(this.fromScale).lerp(this.toScale,d),b.setUpdated(),c>=1&&(a.send(this.transitions.complete),this.completed=!0)}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.quatFrom=new g,this.quatTo=new g,this.quatFinal=new g,this.completed=!1}var e=c(151),f=c(8),g=c(23),h=c(173);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Tween Look At",name:"Tween Look At",type:"animation",description:"Transition the entity's rotation to face the set position.",canTransition:!0,parameters:[{name:"Position",key:"to",type:"position",description:"Look at point.","default":[0,0,0]},{name:"Time (ms)",key:"time",type:"float",description:"Time it takes for this movement to complete.","default":1e3},{name:"Easing type",key:"easing1",type:"string",control:"dropdown",description:"Easing type.","default":"Linear",options:["Linear","Quadratic","Exponential","Circular","Elastic","Back","Bounce"]},{name:"Direction",key:"easing2",type:"string",control:"dropdown",description:"Easing direction.","default":"In",options:["In","Out","InOut"]}],transitions:[{key:"complete",description:"State to transition to when the transition completes."}]},d.getTransitionLabel=function(a){return"complete"===a?"On Tween LookAt Complete":void 0},d.prototype.enter=function(a){var b=a.getOwnerEntity(),c=b.transformComponent.transform;this.startTime=a.getTime(),this.quatFrom.fromRotationMatrix(c.rotation);var d=f.fromArray(this.to).sub(c.translation);this.rot=c.rotation.clone(),this.rot.lookAt(d,f.UNIT_Y),this.quatTo.fromRotationMatrix(this.rot),this.completed=!1},d.prototype.update=function(a){if(!this.completed){var b=a.getOwnerEntity(),c=b.transformComponent.transform,d=Math.min(1e3*(a.getTime()-this.startTime)/this.time,1),e=h[this.easing1][this.easing2](d);g.slerp(this.quatFrom,this.quatTo,e,this.quatFinal),this.quatFinal.toRotationMatrix(c.rotation),b.transformComponent.setUpdated(),d>=1&&(a.send(this.transitions.complete),this.completed=!0)}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.oldVal=new f,this.target=new f,this.vel=new f,this.completed=!1}var e=c(151),f=c(8),g=c(9),h=c(173);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Shake",name:"Shake",type:"animation",description:"Shakes the entity. Optionally performs a transition.",canTransition:!0,parameters:[{name:"Start level",key:"startLevel",type:"float",description:"Shake amount at start.","default":0},{name:"End level",key:"endLevel",type:"float",description:"Shake amount at the end.","default":10},{name:"Time (ms)",key:"time",type:"float",description:"Shake time amount.","default":1e3},{name:"Speed",key:"speed",type:"string",control:"dropdown",description:"Speed of shaking.","default":"Fast",options:["Fast","Medium","Slow"]}],transitions:[{key:"complete",description:"State to transition to when the shake completes."}]};var i={complete:"On Shake Complete"};d.getTransitionLabel=function(a){return i[a]},d.prototype.configure=function(a){this.startLevel=a.startLevel,this.endLevel=a.endLevel,this.time=a.time,this.speed={Fast:1,Medium:2,Slow:4}[a.speed],this.easing=h.Quadratic.InOut,this.eventToEmit=a.transitions.complete},d.prototype.enter=function(a){this.oldVal.set(f.ZERO),this.target.set(f.ZERO),this.vel.set(f.ZERO),this.iter=0,this.startTime=a.getTime(),this.completed=!1},d.prototype.update=function(a){if(!this.completed){var b=a.getOwnerEntity(),c=b.transformComponent,d=c.transform.translation,e=Math.min(1e3*(a.getTime()-this.startTime)/this.time,1),f=this.easing(e),h=g.lerp(f,this.startLevel,this.endLevel);this.iter++,this.iter>this.speed&&(this.iter=0,this.target.setDirect(-this.oldVal.x+(Math.random()-.5)*h*2,-this.oldVal.y+(Math.random()-.5)*h*2,-this.oldVal.z+(Math.random()-.5)*h*2)),this.vel.setDirect(.98*this.vel.x+.1*this.target.x,.98*this.vel.y+.1*this.target.y,.98*this.vel.z+.1*this.target.z),d.add(this.vel).sub(this.oldVal),this.oldVal.copy(this.vel),c.setUpdated(),e>=1&&(d.sub(this.oldVal),c.setUpdated(),this.completed=!0,a.send(this.eventToEmit))}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Pause Animation",name:"Pause Animation",type:"animation",description:"Pauses skeleton animations.",parameters:[{name:"On all entities",key:"onAll",type:"boolean",description:"Pause animation on all entities or just one.","default":!1}],transitions:[]},d.prototype.enter=function(a){if(this.onAll){var b=a.getWorld(),c=b.getSystem("AnimationSystem");c.pause()}else{var d=a.getOwnerEntity();d.animationComponent&&d.animationComponent.pause()}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Resume Animation",name:"Resume Animation",type:"animation",description:"Continues playing a skeleton animation.",parameters:[{name:"On all entities",key:"onAll",type:"boolean",description:"Resume animation on all entities or just one.","default":!1}],transitions:[]},d.prototype.enter=function(a){if(this.onAll){var b=a.getWorld(),c=b.getSystem("AnimationSystem");c.resume()}else{var d=a.getOwnerEntity();d.animationComponent&&d.animationComponent.resume()}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this._transitioned=!1,this._loopAtStart=null,this._previousLoop=0}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Animation",name:"Set Animation",type:"animation",description:"Transitions to a selected animation.",parameters:[{name:"Animation",key:"animation",type:"animation"},{name:"Loops",key:"loops",description:"How many times to loop before transitioning.",type:"int",min:1,"default":1}],transitions:[{key:"complete",description:"State to transition to when the target animation completes. If the animation loops forever, the transition will be done when the next loop starts."}]};var f={complete:"On animation complete"};d.getTransitionLabel=function(a){return f[a]},d.prototype.enter=function(){this._transitioned=!1,this._loopAtStart=null,this._previousLoop=0},d.prototype.update=function(a){if(!this._transitioned){var b=a.getOwnerEntity(),c=this;if(this.animation&&b.animationComponent){var d;null===this._loopAtStart&&(b.animationComponent.transitionTo(this.animation,!0),d=b.animationComponent.getCurrentState(),d&&(this._loopAtStart=d.getCurrentLoop())),d=b.animationComponent.getCurrentState();var e=!1;d?(e=e||d.getCurrentLoop()-this._loopAtStart===this.loops,this._previousLoop=d.getCurrentLoop()):e=e||this._previousLoop===this.loops-1,e&&(a.send(c.transitions.complete),this._transitioned=!0)}}},d.prototype.exit=function(){this._transitioned=!1,this._loopAtStart=null,this._previousLoop=0},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.everyFrame=!1}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Animation Time Scale",name:"Set Animation Time Scale",type:"animation",description:"Sets the time scale for the current animation.",parameters:[{name:"Scale",key:"scale",type:"float",description:"Scale factor for the animation timer.","default":1}],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.animationComponent&&b.animationComponent.setTimeScale(this.scale)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Animation Offset",name:"Set Animation Offset",type:"animation",description:"Sets animation clip offset.",parameters:[{name:"Offset (sec)",key:"offset",type:"float",description:"Animation offset","default":0}],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.animationComponent&&b.animationComponent.shiftClipTime(this.offset)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.currentTime=0,this.totalWait=0,this.completed=!1}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Wait",name:"Wait",type:"animation",description:"Performs a transition after a specified amount of time. A random time can be set, this will add between 0 and the set random time to the specified wait time.",canTransition:!0,parameters:[{name:"Time (ms)",key:"waitTime",type:"float",description:"Base time in milliseconds before transition fires.","default":5e3},{name:"Random (ms)",key:"randomTime",type:"float",description:"A random number of milliseconds (between 0 and this value) will be added to the base wait time.","default":0}],transitions:[{key:"timeUp",description:"State to transition to when time up."}]},d.getTransitionLabel=function(a){return"timeUp"===a?"On Wait End":void 0},d.prototype.enter=function(){this.completed=!1,this.currentTime=0,this.totalWait=parseFloat(this.waitTime)+Math.random()*parseFloat(this.randomTime)},d.prototype.update=function(a){this.currentTime+=1e3*a.getTpf(),this.currentTime>=this.totalWait&&!this.completed&&(this.completed=!0,a.send(this.transitions.timeUp))},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Transition",name:"Transition",type:"transitions",description:"Transition to a selected state.",canTransition:!0,parameters:[],transitions:[{key:"transition",description:"State to transition to."}]};var f={transition:"On Enter"};d.getTransitionLabel=function(a){return f[a]},d.prototype.enter=function(a){a.send(this.transitions.transition)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"transitionOnNextFrame",name:"Transition on next frame",type:"transitions",description:"Transition to a selected state on the next frame.",canTransition:!0,parameters:[],transitions:[{key:"transition",name:"On Next Frame",description:"State to transition to on next frame."}]};var f={transition:"On Next Frame"};d.getTransitionLabel=function(a){return f[a]},d.prototype.update=function(a){a.send(this.transitions.transition)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Random Transition",name:"Random Transition",type:"transitions",description:"Performs a random transition. Will choose one of the two transitions randomly and transition immediately.",canTransition:!0,parameters:[{name:"Probability A",key:"skewness",type:"float",control:"slider",min:0,max:1,description:"The probability that the first destination is chosen over the second.","default":.5}],transitions:[{key:"transition1",description:"First choice."},{key:"transition2",description:"Second choice."}]};var f={transition1:"On random outcome A",transition2:"On random outcome B"};d.getTransitionLabel=function(a){return f[a]},d.prototype.enter=function(a){var b=this.transitions,c=b.transition1,d=b.transition2,e=Math.random()<this.skewness?c:d;a.send(e)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(44);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Emit message",name:"Emit Message",type:"transitions",description:"Emits a message (event) to a channel on the bus. Messages can be listened to by the Listen action, or by scripts using the SystemBus.addListener(channel, callback) function.",parameters:[{name:"Channel",key:"channel",type:"string",description:"Channel to transmit a message (event) on.","default":""}],transitions:[]},d.prototype.enter=function(){f.emit(this.channel,this.data)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(44);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Transition on Message",name:"Listen",type:"transitions",description:"Performs a transition on receiving a system bus message (event) on a specific channel.",canTransition:!0,parameters:[{name:"Message channel",key:"channel",type:"string",description:"Channel to listen to.","default":""}],transitions:[{key:"transition",description:"State to transition to."}]},d.getTransitionLabel=function(a,b){var c=b.options.channel?'"'+b.options.channel+'"':"";return"transition"===a?"On "+c+" event":"On Message"},d.prototype.enter=function(a){this.eventListener=function(){a.send(this.transitions.transition)}.bind(this),f.addListener(this.channel,this.eventListener,!1)},d.prototype.exit=function(){f.removeListener(this.channel,this.eventListener)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.expressionFunction=null}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Eval",name:"Eval",description:"Evaluates a JS expression.",parameters:[{name:"expression",key:"expression",type:"string",description:"JavaScript expression to evaluate.","default":""}],transitions:[]},d.prototype.enter=function(){this.expressionFunction=new Function("goo",this.expression)},d.prototype.update=function(a){if(this.expressionFunction)try{this.expressionFunction(a.getEvalProxy())}catch(b){console.warn("Eval code error: "+b.message)}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Hide",name:"Hide",type:"display",description:"Hides an entity and its children.",parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.hide()},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Show",name:"Show",type:"display",description:"Makes an entity visible.",parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.show()},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Remove",name:"Remove",type:"display",description:"Removes the entity from the world.",parameters:[{name:"Recursive",key:"recursive",type:"boolean",description:"Remove children too.","default":!1}],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.removeFromWorld(this.recursive)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(194),g=c(49),h=c(51),i=c(52);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Add Light",name:"Add Light",description:"Adds a point light to the entity.",type:"light",parameters:[{name:"Color",key:"color",type:"vec3",control:"color",description:"Color of the light.","default":[1,1,1]},{name:"Light type",key:"type",type:"string",control:"dropdown",description:"Light type.","default":"Point",options:["Point","Directional","Spot"]},{name:"Range",key:"range",type:"float",control:"slider",min:0,max:1e3,description:"Range of the light.","default":200},{name:"Cone Angle",key:"angle",type:"float",control:"slider",min:1,max:170,description:"Cone angle (applies only to spot lights).","default":30},{name:"Penumbra",key:"penumbra",type:"float",control:"slider",min:0,max:170,description:"Penumbra (applies only to spot lights).","default":30}],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();if(b.lightComponent)return void(this._untouched=!0);var c;"Directional"===this.type?c=new h:"Spot"===this.type?(c=new i,c.range=+this.range,c.angle=+this.angle,c.penumbra=+this.penumbra):(c=new g,c.range=+this.range),c.color.setDirect(this.color[0],this.color[1],this.color[2]),b.setComponent(new f(c))},d.prototype.cleanup=function(a){if(!this._untouched){var b=a.getOwnerEntity();b&&b.clearComponent("LightComponent")}},a.exports=d},,function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Remove Light",name:"Remove Light",type:"light",description:"Removes the light attached to the entity.",parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();
b.hasComponent("LightComponent")&&b.clearComponent("LightComponent")},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Light Properties",name:"Set Light Properties",description:"Sets various properties of a light.",parameters:[{name:"Entity (optional)",key:"entity",type:"entity",description:"Entity that has a light."},{name:"Color",key:"color",type:"vec3",control:"color",description:"Light color.","default":[1,1,1]},{name:"Intensity",key:"intensity",type:"float",description:"Light intensity.","default":1},{name:"Specular Intensity",key:"specularIntensity",type:"float",description:"Specular light intensity.","default":1},{name:"Range",key:"range",type:"float",description:"Light range (for point/spot lights).","default":100}],transitions:[]},d.prototype.enter=function(a){var b=this.entity&&a.getEntityById(this.entity.entityRef)||a.getOwnerEntity();b&&b.lightComponent&&b.lightComponent.light&&(b.lightComponent.light.color.setDirect(this.color[0],this.color[1],this.color[2]),b.lightComponent.light.intensity=this.intensity,b.lightComponent.light.specularIntensity=this.specularIntensity,b.lightComponent.light.range=this.range)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.fromCol=new f,this.toCol=new f,this.completed=!1}var e=c(151),f=c(8),g=c(173);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Tween Light Color",name:"Tween Light",type:"light",description:"Tweens the color of the light.",parameters:[{name:"Color",key:"to",type:"vec3",control:"color",description:"Color of the light.","default":[1,1,1]},{name:"Time (ms)",key:"time",type:"float",description:"Time it takes for the transition to complete.","default":1e3},{name:"Easing type",key:"easing1",type:"string",control:"dropdown",description:"Easing type.","default":"Linear",options:["Linear","Quadratic","Exponential","Circular","Elastic","Back","Bounce"]},{name:"Direction",key:"easing2",type:"string",control:"dropdown",description:"Easing direction.","default":"In",options:["In","Out","InOut"]}],transitions:[{key:"complete",description:"State to transition to when the light tween was completed."}]},d.getTransitionLabel=function(a){return"complete"===a?"On Tween Light Complete":void 0},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.lightComponent&&(this.fromCol.set(b.lightComponent.light.color),this.toCol.setDirect(this.to[0],this.to[1],this.to[2]),this.startTime=a.getTime(),this.completed=!1)},d.prototype.update=function(a){if(!this.completed){var b=a.getOwnerEntity();if(b.lightComponent){var c=Math.min(1e3*(a.getTime()-this.startTime)/this.time,1),d=g[this.easing1][this.easing2](c),e=b.lightComponent.light.color;e.set(this.fromCol).lerp(this.toCol,d),c>=1&&(a.send(this.transitions.complete),this.completed=!0)}}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Clear Color",name:"Background Color",description:"Sets the clear color.",parameters:[{name:"Color",key:"color",type:"vec4",control:"color",description:"Color.","default":[1,1,1,1]}],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity(),c=this.color;b._world.gooRunner.renderer.setClearColor(c[0],c[1],c[2],c[3])},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this._camera=null}var e=c(151),f=c(44),g=c(123);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Switch Camera",name:"Switch Camera",type:"camera",description:"Switches to a selected camera.",parameters:[{name:"Camera",key:"cameraEntityRef",type:"camera",description:"Camera to switch to.","default":null}],transitions:[]},d.prototype.ready=function(){this._camera=g.mainCamera},d.prototype.enter=function(a){var b=a.getOwnerEntity()._world,c=b.entityManager.getEntityById(this.cameraEntityRef);c&&c.cameraComponent&&f.emit("goo.setCurrentCamera",{camera:c.cameraComponent.camera,entity:c})},d.prototype.cleanup=function(){},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(120),g=c(13);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"In Frustum",name:"In View",type:"camera",description:"Performs a transition based on whether the entity is in a camera's frustum or not.",canTransition:!0,parameters:[{name:"Current camera",key:"current",type:"boolean",description:"Check this to always use the current camera.","default":!0},{name:"Camera",key:"cameraEntityRef",type:"camera",description:"Other camera; Will be ignored if the previous option is checked.","default":null},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[{key:"inside",description:"State to transition to if entity is in the frustum."},{key:"outside",description:"State to transition to if entity is outside the frustum."}]};var h={inside:"On Inside Frustum",outside:"On Outside Frustum"};d.getTransitionLabel=function(a){return h[a]},d.prototype.checkFrustum=function(a){var b=a.getOwnerEntity();if(this.current)b.isVisible?a.send(this.transitions.inside):a.send(this.transitions.outside);else{var c=b.meshRendererComponent?b.meshRendererComponent.worldBound:new g(b.transformComponent.sync().worldTransform.translation,.001);this.camera.contains(c)===f.Outside?a.send(this.transitions.outside):a.send(this.transitions.inside)}},d.prototype.enter=function(a){if(!this.current){var b=a.getOwnerEntity()._world,c=b.entityManager.getEntityById(this.cameraEntityRef);this.camera=c.cameraComponent.camera}this.everyFrame||this.checkFrustum(a)},d.prototype.update=function(a){this.everyFrame&&this.checkFrustum(a)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.from=new f,this.to=new f,this.completed=!1}var e=c(151),f=c(8),g=c(9),h=c(173);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Dolly Zoom",name:"Dolly Zoom",type:"camera",description:"Performs dolly zoom.",parameters:[{name:"Forward",key:"forward",type:"float",description:"Number of units to move towards the focus point. Enter negative values to move away.","default":100},{name:"Focus point",key:"lookAt",type:"position",description:"Point to focus on while transitioning.","default":[0,0,0]},{name:"Time (ms)",key:"time",type:"float",description:"Time.","default":1e4},{name:"Easing type",key:"easing1",type:"string",control:"dropdown",description:"Easing.","default":"Linear",options:["Linear","Quadratic","Exponential","Circular","Elastic","Back","Bounce"]},{name:"Direction",key:"easing2",type:"string",control:"dropdown",description:"Easing direction.","default":"In",options:["In","Out","InOut"]}],transitions:[{key:"complete",description:"State to transition to when the transition completes."}]},d.getTransitionLabel=function(){return"On Dolly Zoom Complete"},d.prototype.enter=function(a){var b=a.getOwnerEntity();if(this.completed=!1,b.cameraComponent&&b.cameraComponent.camera){var c=b.transformComponent,d=c.transform.translation,e=b.cameraComponent.camera;this.fromDistance=new f(this.lookAt).distance(e.translation),this.toDistance=this.fromDistance-this.forward,this.eyeTargetScale=Math.tan(e.fov*(Math.PI/180)/2)*this.fromDistance;var g=(new f).copy(d),h=f.fromArray(this.lookAt).sub(g).normalize().scale(this.forward).add(g);this.from.set(g.x,g.y,g.z),this.to.setDirect(h.x,h.y,h.z),this.startTime=a.getTime()}else this.eyeTargetScale=null},d.prototype.update=function(a){if(!this.completed&&this.eyeTargetScale){var b=a.getOwnerEntity(),c=b.transformComponent,d=b.cameraComponent.camera,e=Math.min(1e3*(a.getTime()-this.startTime)/this.time,1),f=h[this.easing1][this.easing2](e);c.transform.translation.set(this.from).lerp(this.to,f),c.setUpdated();var i=g.lerp(f,this.fromDistance,this.toDistance),j=180/Math.PI*2*Math.atan(this.eyeTargetScale/i);d.setFrustumPerspective(j),e>=1&&(a.send(this.transitions.complete),this.completed=!0)}},a.exports=d},function(a,b,c){function d(){f.apply(this,arguments)}function e(a,b,c){var d=!1,e=function(a,b,c){if(b>c){if(b>a&&a>c)return!0}else if(c>b){if(c>a&&a>b)return!0}else if(a===c)return!0;return!1},f=e(a[0],b[0],c[0]),g=e(a[1],b[1],c[1]),h=e(a[2],b[2],c[2]);return f&&g&&h&&(d=!0),d}var f=c(151);d.prototype=Object.create(f.prototype),d.prototype.constructor=d,d.external={key:"In Box",name:"In Box",type:"collision",description:"Performs a transition based on whether an entity is inside a user defined box volume or not. The volume is defined by setting two points which, when connected, form a diagonal through the box volume.",canTransition:!0,parameters:[{name:"Point1",key:"point1",type:"position",description:"First box point.","default":[-1,-1,-1]},{name:"Point2",key:"point2",type:"position",description:"Second box point.","default":[1,1,1]},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[{key:"inside",description:"State to transition to if the entity is inside the box."},{key:"outside",description:"State to transition to if the entity is outside the box."}]};var g={inside:"On Inside Box",outside:"On Outside Box"};d.getTransitionLabel=function(a){return g[a]},d.prototype.checkInside=function(a){var b=a.getOwnerEntity(),c=b.transformComponent.sync().worldTransform.translation,d=e([c.x,c.y,c.z],this.point1,this.point2);d?a.send(this.transitions.inside):a.send(this.transitions.outside)},d.prototype.enter=function(a){this.everyFrame||this.checkInside(a)},d.prototype.update=function(a){this.everyFrame&&this.checkInside(a)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(123);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Compare Distance",name:"Camera Distance",type:"collision",description:"Performs a transition based on the distance to the main camera or to a location.",canTransition:!0,parameters:[{name:"Current camera",key:"camera",type:"boolean",description:"Measure the distance to the current camera or to an arbitrary point.","default":!0},{name:"Position",key:"position",type:"position",description:"Position to measure the distance to; Will be ignored if previous option is selected.","default":[0,0,0]},{name:"Value",key:"value",type:"float",description:"Value to compare to.","default":0},{name:"Tolerance",key:"tolerance",type:"float","default":0},{name:"Type",key:"distanceType",type:"string",control:"dropdown",description:"The type of distance.","default":"Euclidean",options:["Euclidean","Manhattan"]},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[{key:"less",description:"State to transition to if the measured distance is smaller than the specified value."},{key:"equal",description:"State to transition to if the measured distance is about the same as the specified value."},{key:"greater",description:"State to transition to if the measured distance is greater than the specified value."}]};var g={less:"On camera distance < X",equal:"On camera distance == X",greater:"On camera distance > X"};d.getTransitionLabel=function(a){return g[a]},d.prototype.compare=function(a){var b,c=a.getOwnerEntity(),d=c.transformComponent.sync().worldTransform.translation;b=this.camera?d.clone().sub(f.mainCamera.translation):d.clone().subDirect(this.position[0],this.position[1],this.position[2]);var e;e="Euclidean"===this.type?b.length():Math.abs(b.x)+Math.abs(b.y)+Math.abs(b.z);var g=this.value-e;Math.abs(g)<=this.tolerance?a.send(this.transitions.equal):g>0?a.send(this.transitions.less):a.send(this.transitions.greater)},d.prototype.enter=function(a){this.everyFrame||this.compare(a)},d.prototype.update=function(a){this.everyFrame&&this.compare(a)},a.exports=d},function(a,b,c){function d(){f.apply(this,arguments)}var e=c(21),f=c(151),g=c(205);d.prototype=Object.create(f.prototype),d.prototype.constructor=d,d.external={key:"Collides",name:"Collision (Bounding volume intersection)",type:"collision",description:"Checks for collisions or non-collisions with other entities. Collisions are based on the entities' bounding volumes. Before using collisions you first need to tag your entities.",canTransition:!0,parameters:[{name:"Tag",key:"tag",type:"string",description:"Checks for collisions with other objects having this tag.","default":"red"}],transitions:[{key:"collides",description:"State to transition to when a collision occurs."},{key:"notCollides",description:"State to transition to when a collision is not occurring."}]};var h={collides:"On bounds Overlap",notCollides:"On bounds Separate"};d.getTransitionLabel=function(a){return h[a]},d.prototype.ready=function(a){var b=a.getOwnerEntity(),c=b._world;c.getSystem("ProximitySystem")||c.setSystem(new g)},d.prototype.update=function(a){var b=a.getOwnerEntity(),c=b._world,d=c.getSystem("ProximitySystem"),f=new e(d.getFor(this.tag)).and(c.by.tag(this.tag)).toArray(),g=!1;b.traverse(function(a){if(!a.meshRendererComponent||a.particleComponent)return!1;for(var b=a.meshRendererComponent.worldBound,c=0;c<f.length;c++)if(f[c].traverse(function(a){if(!a.meshRendererComponent||a.particleComponent)return!0;var c=a.meshRendererComponent.worldBound;return c&&b.intersects(c)?(g=!0,!1):void 0}),g)return!1}),a.send(g?this.transitions.collides:this.transitions.notCollides)},a.exports=d},function(a,b,c){function d(){f.call(this,"ProximitySystem",["ProximityComponent"]),this.collections={Red:{name:"Red",collection:[]},Blue:{name:"Blue",collection:[]},Green:{name:"Green",collection:[]},Yellow:{name:"Yellow",collection:[]}}}function e(a){return h.capitalize(a)}var f=c(42),g=c(44),h=c(36);d.prototype=Object.create(f.prototype),d.prototype._collides=function(a,b){for(var c=0;c<a.collection.length;c++)for(var d=a.collection[c],e=0;e<b.collection.length;e++){var f=b.collection[e];d.meshRendererComponent.worldBound.intersects(f.meshRendererComponent.worldBound)&&g.send("collides."+a.name+"."+b.name)}},d.prototype.getFor=function(a){return a=e(a),this.collections[a]?this.collections[a].collection:[]},d.prototype.add=function(a,b){b=e(b),this.collections[b]||(this.collections[b]={name:b,collection:[]}),this.collections[b].collection.push(a)},d.prototype.remove=function(a,b){b=e(b);var c=this.collections[b].collection,d=c.indexOf(a);c.splice(d,1)},d.prototype.process=function(){},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(207);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Tag",name:"Tag",type:"collision",description:"Sets a tag on the entity. Use tags to be able to capture collision events with the 'Collides' action.",parameters:[{name:"Tag",key:"tag",type:"string",control:"dropdown",description:"Checks for collisions with other objects having this tag.","default":"red",options:["red","blue","green","yellow"]}],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.proximityComponent?b.proximityComponent.tag!==this.tag&&(b.clearComponent("ProximityComponent"),b.setComponent(new f(this.tag))):b.setComponent(new f(this.tag))},d.prototype.cleanup=function(a){var b=a.getOwnerEntity();b&&b.clearComponent("ProximityComponent")},a.exports=d},function(a,b,c){function d(a){e.apply(this,arguments),this.type="ProximityComponent",Object.defineProperty(this,"tag",{value:a||"red",writable:!1})}var e=c(20);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.attached=function(a){var b=a._world;if(b){var c=b.getSystem("ProximitySystem");c&&c.add(a,this.tag)}},d.prototype.detached=function(a){var b=a._world;if(b){var c=b.getSystem("ProximitySystem");c&&c.remove(a,this.tag)}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.smokeEntity=null}var e=c(151),f=c(30),g=c(46),h=c(209),i=c(210);d.material=null,d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Smoke",name:"Smoke FX",type:"fx",description:'Makes the entity emit smoke. To cancel the smoke emitter use the "Remove Particles" action.',parameters:[{name:"Color",key:"color",type:"vec3",control:"color",description:"Smoke color.","default":[0,0,0]}],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();if(!this.smokeEntity||-1===b.transformComponent.children.indexOf(this.smokeEntity.transformComponent)){var c=b._world.gooRunner;if(!d.material){d.material=new f(g.particles);var e=i.createFlareTexture();e.generateMipmaps=!0,d.material.setTexture("DIFFUSE_MAP",e),d.material.blendState.blending="TransparencyBlending",d.material.cullState.enabled=!1,d.material.depthState.write=!1,d.material.renderQueue=2001}var j=b.transformComponent.sync().worldTransform.scale,k=(j.x+j.y+j.z)/3;this.smokeEntity=i.createParticleSystemEntity(c.world,h.getSmoke({scale:k,color:this.color}),d.material),this.smokeEntity.meshRendererComponent.isPickable=!1,this.smokeEntity.meshRendererComponent.castShadows=!1,this.smokeEntity.meshRendererComponent.receiveShadows=!1,this.smokeEntity.name="_ParticleSystemSmoke",b.transformComponent.attachChild(this.smokeEntity.transformComponent),this.smokeEntity.addToWorld()}},d.prototype.cleanup=function(){this.smokeEntity&&(this.smokeEntity.removeFromWorld(),this.smokeEntity=null)},a.exports=d},,,,,,,,,function(a,b,c){function d(){e.apply(this,arguments),this.fireEntity=null}var e=c(151),f=c(30),g=c(46),h=c(209),i=c(210);d.material=null,d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Fire",name:"Fire FX",type:"fx",description:'Makes the entity emit fire. To "extinguish" the fire use the "Remove Particles" action.',parameters:[{name:"Start Color",key:"startColor",type:"vec3",control:"color",description:"Flame color at source.","default":[1,1,0]},{name:"End color",key:"endColor",type:"vec3",control:"color",description:"Color near the end of a flame's life.","default":[1,0,0]}],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();if(!this.fireEntity||-1===b.transformComponent.children.indexOf(this.fireEntity.transformComponent)){var c=b._world.gooRunner;if(!d.material){d.material=new f(g.particles);var e=i.createFlareTexture();e.generateMipmaps=!0,d.material.setTexture("DIFFUSE_MAP",e),d.material.blendState.blending="AdditiveBlending",d.material.cullState.enabled=!1,d.material.depthState.write=!1,d.material.renderQueue=2002}var j=b.transformComponent.sync().worldTransform.scale,k=(j.x+j.y+j.z)/3;this.fireEntity=i.createParticleSystemEntity(c.world,h.getFire({scale:k,startColor:this.startColor,endColor:this.endColor}),d.material),this.fireEntity.meshRendererComponent.isPickable=!1,this.fireEntity.meshRendererComponent.castShadows=!1,this.fireEntity.meshRendererComponent.receiveShadows=!1,this.fireEntity.name="_ParticleSystemFire",b.transformComponent.attachChild(this.fireEntity.transformComponent),this.fireEntity.addToWorld()}},d.prototype.cleanup=function(){this.fireEntity&&(this.fireEntity.removeFromWorld(),this.fireEntity=null)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Remove Particles",name:"Remove Particles",type:"fx",description:"Removes any particle emitter attached to the entity.",parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.children().each(function(a){-1!==a.name.indexOf("_ParticleSystem")&&a.hasComponent("ParticleComponent")&&a.removeFromWorld()})},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Toggle Post FX",name:"Toggle Post FX",type:"fx",description:"Enabled/disables post fx globally.",parameters:[{name:"Set Post FX state",key:"enabled",type:"boolean",description:"Set Post FX on/off.","default":!0}],transitions:[]},d.prototype.enter=function(a){var b=a.getWorld().gooRunner.renderSystem;b&&b.enableComposers(this.enabled)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(221);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Toggle Fullscreen",name:"Toggle Fullscreen",type:"display",description:"Toggles fullscreen on/off. Note that in most browsers this must be initiated by a user gesture. For example, click or touch.",parameters:[],transitions:[]},d.prototype.enter=function(){f.toggleFullScreen()},a.exports=d},,function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(223);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Play Sound",name:"Play Sound",type:"sound",description:"Plays a sound. NOTE: On iOS devices, you need to play the first sound inside a touchend event (for example using the MouseUpAction).",canTransition:!0,parameters:[{name:"Sound",key:"sound",type:"sound",description:"Sound to play."}],transitions:[{key:"complete",description:"State to transition to when the sound finishes playing."}]};var g={complete:"On Sound End"};d.getTransitionLabel=function(a){return g[a]},d.prototype.enter=function(a){var b=a.getOwnerEntity();if(b.hasComponent("SoundComponent")){var c=b.soundComponent.getSoundById(this.sound);if(c){var d;try{d=c.play()}catch(e){console.warn("Could not play sound: "+e),d=f.resolve()}d.then(function(){a.send(this.transitions.complete)}.bind(this))}}},a.exports=d},,function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Pause Sound",name:"Pause Sound",type:"sound",description:"Pauses a sound.",canTransition:!1,parameters:[{name:"Sound",key:"sound",type:"sound",description:"Sound to pause."}],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();if(b.hasComponent("SoundComponent")){var c=b.soundComponent.getSoundById(this.sound);c&&c.pause()}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Stop Sound",name:"Stop Sound",type:"sound",description:"Stops a sound.",canTransition:!1,parameters:[{name:"Sound",key:"sound",type:"sound",description:"Sound to stop."}],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();if(b.hasComponent("SoundComponent")){var c=b.soundComponent.getSoundById(this.sound);c&&c.stop()}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(223);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Sound Fade In",name:"Sound Fade In",type:"sound",description:"Fades in a sound. NOTE: On iOS devices, you need to play the first sound inside a touchend event (for example using the MouseUpAction).",canTransition:!0,parameters:[{name:"Sound",key:"sound",type:"sound",description:"Sound to fade."},{name:"Time (ms)",key:"time",type:"float",description:"Time it takes for the fading to complete.","default":1e3},{name:"On Sound End",key:"onSoundEnd",type:"boolean",description:"Whether to transition when the sound finishes playing, regardless of the specified transition time.","default":!1}],transitions:[{key:"complete",description:"State to transition to when the time expires or when the sound finishes playing."}]};var g={complete:"On Sound Fade In Complete"};d.getTransitionLabel=function(a){return g[a]},d.prototype.enter=function(a){var b=a.getOwnerEntity();if(b.hasComponent("SoundComponent")){var c=b.soundComponent.getSoundById(this.sound);if(c){var d;try{d=c.fadeIn(this.time/1e3),this.onSoundEnd&&(d=c.play())}catch(e){console.warn("Could not play sound: "+e),d=f.resolve()}d.then(function(){a.send(this.transitions.complete)}.bind(this))}}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Sound Fade Out",name:"Sound Fade Out",type:"sound",description:"Fades out a sound and stops it.",canTransition:!0,parameters:[{name:"Sound",key:"sound",type:"sound",description:"Sound to fade out."},{name:"Time (ms)",key:"time",type:"float",description:"Time it takes for the fading to complete.","default":1e3}],transitions:[{key:"complete",description:"State to transition to when the sound fade completes."}]};var f={complete:"On Sound Fade Out Complete"};d.getTransitionLabel=function(a){return f[a]},d.prototype.enter=function(a){var b=a.getOwnerEntity();if(b.hasComponent("SoundComponent")){var c=b.soundComponent.getSoundById(this.sound);c&&c.fadeOut(this.time/1e3).then(function(){a.send(this.transitions.complete)}.bind(this))}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(229),g=c(230),h=c(30),i=c(46);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Render Target",name:"Set Render Target",type:"texture",description:"Renders what a camera sees on the current entity's texture.",parameters:[{name:"Camera",key:"cameraEntityRef",type:"camera",description:"Camera to use as source.","default":null}],transitions:[]},d.prototype.ready=function(a){var b=a.getOwnerEntity(),c=b._world;if(!c.getSystem("PortalSystem")){var d=c.getSystem("RenderSystem"),e=c.gooRunner.renderer;c.setSystem(new g(e,d))}},d.prototype.enter=function(a){var b=a.getOwnerEntity(),c=b._world,d=c.entityManager.getEntityById(this.cameraEntityRef);if(d&&d.cameraComponent&&d.cameraComponent.camera){var e=d.cameraComponent.camera,g=new h(i.textured);if(b.meshRendererComponent){this.oldMaterials=b.meshRendererComponent.materials,b.meshRendererComponent.materials=[g];var j=new f(e,500,{preciseRecursion:!0});b.setComponent(j)}}},d.prototype.cleanup=function(a){var b=a.getOwnerEntity();b&&(this.oldMaterials&&b.meshRendererComponent&&(b.meshRendererComponent.materials=this.oldMaterials),b.clearComponent("portalComponent")),this.oldMaterials=null},a.exports=d},,,function(a,b,c){function d(){e.apply(this,arguments),this.fromOffset=new f,this.toOffset=new f,this.completed=!1}var e=c(151),f=c(19),g=c(173);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Tween Texture Offset",name:"Tween Texture Offset",type:"texture",description:"Smoothly changes the texture offset of the entity.",canTransition:!0,parameters:[{name:"X Offset",key:"toX",type:"float",description:"X Offset.","default":1},{name:"Y Offset",key:"toY",type:"float",description:"Y Offset.","default":1},{name:"Time (ms)",key:"time",type:"float",description:"Time it takes for this transition to complete.","default":1e3},{name:"Easing type",key:"easing1",type:"string",control:"dropdown",description:"Easing type.","default":"Linear",options:["Linear","Quadratic","Exponential","Circular","Elastic","Back","Bounce"]},{name:"Direction",key:"easing2",type:"string",control:"dropdown",description:"Easing direction.","default":"In",options:["In","Out","InOut"]}],transitions:[{key:"complete",description:"State to transition to when the transition completes."}]},d.getTransitionLabel=function(a){return"complete"===a?"On UV Tween Complete":void 0},d.prototype.enter=function(a){var b=a.getOwnerEntity(),c=b.meshRendererComponent;if(this.texture=null,c&&0!==c.materials.length){var d=c.materials[0];this.texture=d.getTexture("DIFFUSE_MAP"),this.texture&&(this.fromOffset.set(this.texture.offset),this.toOffset.setDirect(this.toX,this.toY),this.relative&&this.toOffset.add(this.fromOffset),this.startTime=a.getTime(),this.completed=!1)}},d.prototype.update=function(a){if(!this.completed&&this.texture){var b=Math.min(1e3*(a.getTime()-this.startTime)/this.time,1),c=g[this.easing1][this.easing2](b);this.texture.offset.set(this.fromOffset).lerp(this.toOffset,c),b>=1&&(a.send(this.transitions.complete),this.completed=!0)}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Material Color",name:"Set Material Color",type:"texture",description:"Sets the color of a material.",parameters:[{name:"Entity (optional)",key:"entity",type:"entity",description:"Entity that has a material."},{name:"Color type",key:"type",type:"string",control:"dropdown",description:"Color type.","default":"Diffuse",options:["Diffuse","Emissive","Specular","Ambient"]},{name:"Color",key:"color",type:"vec3",control:"color",description:"Color.","default":[1,1,1]}],transitions:[]};var f={Diffuse:"materialDiffuse",Emissive:"materialEmissive",Specular:"materialSpecular",Ambient:"materialAmbient"};d.prototype.enter=function(a){var b=this.entity&&a.getEntityById(this.entity.entityRef)||a.getOwnerEntity();if(b&&b.meshRendererComponent){var c=b.meshRendererComponent.materials[0],d=f[this.type];c.uniforms[d]=c.uniforms[d]||[1,1,1,1];var e=c.uniforms[d];e[0]=this.color[0],e[1]=this.color[1],e[2]=this.color[2]}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.fromColor=new f,this.toColor=new f,this.calc=new f,this.completed=!1}var e=c(151),f=c(8),g=c(173);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Tween Material Color",name:"Tween Material Color",type:"texture",description:"Tweens the color of a material.",parameters:[{name:"Entity (optional)",key:"entity",type:"entity",description:"Entity that has a material."},{name:"Color type",key:"type",type:"string",control:"dropdown",description:"Color type.","default":"Diffuse",options:["Diffuse","Emissive","Specular","Ambient"]},{name:"Color",key:"color",type:"vec3",control:"color",description:"Color.","default":[1,1,1]},{name:"Time (ms)",key:"time",type:"float",control:"spinner",description:"Time it takes for the transition to complete.","default":1e3},{name:"Easing type",key:"easing1",type:"string",control:"dropdown",description:"Easing type.","default":"Linear",options:["Linear","Quadratic","Exponential","Circular","Elastic","Back","Bounce"]},{name:"Direction",key:"easing2",type:"string",control:"dropdown",description:"Easing direction.","default":"In",options:["In","Out","InOut"]}],transitions:[{key:"complete",description:"State to transition to when the transition completes."}]};var h={Diffuse:"materialDiffuse",Emissive:"materialEmissive",Specular:"materialSpecular",Ambient:"materialAmbient"};d.getTransitionLabel=function(a,b){return"complete"===a?"On Tween "+(b.options.type||"Color")+" Complete":void 0},d.prototype.enter=function(a){var b=this.entity&&a.getEntityById(this.entity.entityRef)||a.getOwnerEntity(),c=b.meshRendererComponent;c&&(this.startTime=a.getTime(),this.material=c.materials[0],this.typeName=h[this.type],this.materialColor=this.material.uniforms[this.typeName]=this.material.uniforms[this.typeName]||[1,1,1,1],this.fromColor.setDirect(this.materialColor[0],this.materialColor[1],this.materialColor[2]),this.toColor.setDirect(this.color[0],this.color[1],this.color[2]),this.completed=!1)},d.prototype.update=function(a){if(!this.completed){var b=this.entity&&a.getEntityById(this.entity.entityRef)||a.getOwnerEntity(),c=b.meshRendererComponent;if(c){var d=Math.min(1e3*(a.getTime()-this.startTime)/this.time,1),e=g[this.easing1][this.easing2](d);this.calc.set(this.fromColor).lerp(this.toColor,e),this.materialColor[0]=this.calc.x,this.materialColor[1]=this.calc.y,this.materialColor[2]=this.calc.z,d>=1&&(a.send(this.transitions.complete),this.completed=!0)}}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Log Message",name:"Log Message",description:"Prints a message in the debug console of your browser.",parameters:[{name:"Message",key:"message",type:"string",description:"Message to print.","default":"hello"},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!1}],transitions:[]},d.prototype.enter=function(){this.everyFrame||console.log(this.message);
},d.prototype.update=function(){this.everyFrame&&console.log(this.message)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.completed=!1}var e=c(151),f=c(173),g=c(9);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Tween Opacity",name:"Tween Material Opacity",type:"texture",description:"Tweens the opacity of a material.",parameters:[{name:"Opacity",key:"to",type:"float",control:"spinner",description:"Opacity.","default":1},{name:"Time (ms)",key:"time",type:"float",control:"spinner",description:"Time it takes for the transition to complete.","default":1e3},{name:"Easing type",key:"easing1",type:"string",control:"dropdown",description:"Easing type.","default":"Linear",options:["Linear","Quadratic","Exponential","Circular","Elastic","Back","Bounce"]},{name:"Direction",key:"easing2",type:"string",control:"dropdown",description:"Easing direction.","default":"In",options:["In","Out","InOut"]}],transitions:[{key:"complete",description:"State to transition to when the transition completes."}]},d.getTransitionLabel=function(a){return"complete"===a?"On Tween Opacity Complete":void 0},d.prototype.enter=function(a){var b=a.getOwnerEntity(),c=b.meshRendererComponent;c&&(this.startTime=a.getTime(),this.material=c.materials[0],"NoBlending"===this.material.blendState.blending&&(this.material.blendState.blending="TransparencyBlending"),this.material.renderQueue<2e3&&(this.material.renderQueue=2e3),void 0===this.material.uniforms.opacity&&(this.material.uniforms.opacity=1),this.uniforms=this.material.uniforms,this.from=this.uniforms.opacity,this.completed=!1)},d.prototype.update=function(a){if(!this.completed){var b=a.getOwnerEntity(),c=b.meshRendererComponent;if(c){var d=Math.min(1e3*(a.getTime()-this.startTime)/this.time,1),e=f[this.easing1][this.easing2](d);this.uniforms.opacity=g.lerp(e,this.from,this.to),d>=1&&(a.send(this.transitions.complete),this.completed=!0)}}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"HTMLPick",name:"HTMLPick",type:"controls",description:"Listens for a picking event and performs a transition. Can only be used on HTML entities.",canTransition:!0,parameters:[],transitions:[{key:"pick",description:"State to transition to when the HTML entity is picked."}]},d.getTransitionLabel=function(){return"On HTML Pick"},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.htmlComponent&&(this.eventListener=function(){a.send(this.transitions.pick)}.bind(this),this.domElement=b.htmlComponent.domElement,this.domElement.addEventListener("click",this.eventListener))},d.prototype.exit=function(a){var b=a.getOwnerEntity();b.htmlComponent&&this.domElement&&this.domElement.removeEventListener("click",this.eventListener)},a.exports=d},function(a,b,c){function d(){f.apply(this,arguments),this.everyFrame=!0}function e(a){a.sync();var b=a.entity;b&&b.meshDataComponent&&b.meshRendererComponent&&b.meshRendererComponent.updateBounds(b.meshDataComponent.modelBound,a.sync().worldTransform);for(var c=0;c<a.children.length;c++)e(a.children[c])}var f=c(151);d.prototype=Object.create(f.prototype),d.prototype.constructor=d,d.external={key:"Copy Joint Transform",name:"Copy Joint Transform",type:"animation",description:"Copies a joint's transform from another entity, and applies it to this entity. This entity must be a child of an entity with an animation component.",parameters:[{name:"Joint",key:"jointIndex",type:"int",control:"jointSelector","default":null,description:"Joint transform to copy."}],transitions:[]},d.prototype.update=function(a){if(null!==this.jointIndex){var b=a.getOwnerEntity(),c=b.transformComponent.parent;if(c&&(c=c.entity,c.animationComponent&&c.animationComponent._skeletonPose)){var d=c.animationComponent._skeletonPose,f=d._globalTransforms[this.jointIndex];f&&(b.transformComponent.transform.matrix.copy(f.matrix),f.matrix.getTranslation(b.transformComponent.transform.translation),f.matrix.getScale(b.transformComponent.transform.scale),f.matrix.getRotation(b.transformComponent.transform.rotation),e(b.transformComponent),b.transformComponent.setUpdated())}}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.entity=null}var e=c(151),f=c(44);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"TriggerEnter",name:"TriggerEnter",type:"collision",description:"Transitions when the trigger collider is entered. This action only works if the entity has a Collider Component.",canTransition:!0,parameters:[],transitions:[{key:"enter",description:"State to transition to when enter occurs."}]},d.getTransitionLabel=function(a){return"enter"===a?"On Trigger Enter":void 0},d.prototype.enter=function(a){this.entity=a.getOwnerEntity();var b=this;this.listener=function(c){(b.entity&&c.entityA===b.entity||c.entityB===b.entity)&&(b.entity=null,a.send(b.transitions.enter))},f.addListener("goo.physics.triggerEnter",this.listener)},d.prototype.exit=function(){f.removeListener("goo.physics.triggerEnter",this.listener),this.entity=null},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.entity=null}var e=c(151),f=c(44);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"TriggerLeave",name:"TriggerLeave",type:"collision",description:"Transitions when a collider is leaving the entity trigger collider. This action only works if the entity has a Collider Component.",canTransition:!0,parameters:[],transitions:[{key:"leave",description:"State to transition to when leave occurs."}]},d.getTransitionLabel=function(a){return"leave"===a?"On Trigger Leave":void 0},d.prototype.enter=function(a){this.entity=a.getOwnerEntity();var b=this;this.listener=function(c){(b.entity&&c.entityA===b.entity||c.entityB===b.entity)&&(b.entity=null,a.send(b.transitions.leave))},f.addListener("goo.physics.triggerExit",this.listener)},d.prototype.exit=function(){f.removeListener("goo.physics.triggerExit",this.listener),this.entity=null},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(8);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"ApplyImpulse",name:"Apply impulse on rigid body",type:"physics",description:"Apply an impulse to the attached rigid body.",canTransition:!1,parameters:[{name:"Impulse",key:"impulse",type:"position",description:"Impulse to apply to the body.","default":[0,0,0]},{name:"Apply point",key:"point",type:"position",description:"Where on the body to apply the impulse, relative to the center of mass.","default":[0,0,0]},{name:"Space",key:"space",type:"string",control:"dropdown",description:"The space where the impulse and apply point are defined.","default":"World",options:["World","Local"]}],transitions:[]};var g=new f,h=new f;d.prototype.enter=function(a){var b=a.getOwnerEntity();b.rigidBodyComponent&&(g.setArray(this.impulse),h.setArray(this.point),"World"===this.space?b.rigidBodyComponent.applyImpulse(g,h):b.rigidBodyComponent.applyImpulseLocal(g,h))},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(8),g=c(44);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"ApplyForce",name:"Apply force on rigid body",type:"physics",description:"Apply a force to the attached rigid body.",canTransition:!1,parameters:[{name:"Force",key:"force",type:"position",description:"Force to apply to the body.","default":[0,0,0]},{name:"Apply point",key:"point",type:"position",description:"Where on the body to apply the force, relative to the center of mass.","default":[0,0,0]},{name:"Space",key:"space",type:"string",control:"dropdown",description:"The space where the force and apply point are defined.","default":"World",options:["World","Local"]}],transitions:[]};var h=new f,i=new f;d.prototype.enter=function(a){g.addListener("goo.physics.substep",this.substepListener=function(){var b=a.getOwnerEntity();b&&b.rigidBodyComponent&&(h.setArray(this.force),i.setArray(this.point),"World"===this.space?b.rigidBodyComponent.applyForce(h,i):b.rigidBodyComponent.applyForceLocal(h,i))}.bind(this))},d.prototype.exit=function(){g.removeListener("goo.physics.substep",this.substepListener)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(8),g=c(44);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"ApplyTorque",name:"Apply torque on rigid body",type:"physics",description:"Apply a torque to the attached rigid body.",canTransition:!1,parameters:[{name:"Torque",key:"torque",type:"position",description:"Torque to apply to the body.","default":[0,0,0]},{name:"Space",key:"space",type:"string",control:"dropdown",description:"Whether to apply the torque in local or world space.","default":"World",options:["World","Local"]}],transitions:[]};var h=new f;d.prototype.enter=function(a){g.addListener("goo.physics.substep",this.substepListener=function(){var b=a.getOwnerEntity();b&&b.rigidBodyComponent&&(h.setArray(this.torque),"World"===this.space?b.rigidBodyComponent.applyTorque(h):b.rigidBodyComponent.applyTorqueLocal(h))}.bind(this))},d.prototype.exit=function(){g.removeListener("goo.physics.substep",this.substepListener)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(8);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Rigid Body Position",name:"Set Rigid Body Position",type:"physics",description:"Set the position of the rigid body.",canTransition:!1,parameters:[{name:"Position",key:"position",type:"position",description:"Absolute world position to set.","default":[0,0,0]}],transitions:[]};var g=new f;d.prototype.enter=function(a){var b=a.getOwnerEntity();b&&b.rigidBodyComponent&&(g.setArray(this.position),b.rigidBodyComponent.setPosition(g))},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(24),g=c(23),h=c(9);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"setRigidBodyRotation",name:"Set Rigid Body Rotation",type:"physics",canTransition:!1,parameters:[{name:"Rotation",key:"rotation",type:"vec3",description:"Absolute rotation to set.","default":[0,0,0]},{name:"Relative",key:"relative",type:"boolean",description:"Relative to the current rotation or absolute.","default":!1}],transitions:[]},d.prototype.setRotation=function(){var a=new f,b=new f,c=new g,d=new g,e=h.DEG_TO_RAD;return function(f){var g=f.getOwnerEntity();if(g&&g.rigidBodyComponent){var h=this.rotation;a.fromAngles(h[0]*e,h[1]*e,h[2]*e),this.relative&&(g.rigidBodyComponent.getQuaternion(d),b.copyQuaternion(d),a.mul2(b,a)),c.fromRotationMatrix(a),g.rigidBodyComponent.setQuaternion(c)}}}(),d.prototype.enter=function(a){this.setRotation(a)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(8);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Rigid Body Velocity",name:"Set Rigid Body Velocity",type:"physics",description:"Set the linear velocity of the rigid body component.",canTransition:!1,parameters:[{name:"Velocity",key:"velocity",type:"position",description:"Velocity to set.","default":[0,0,0]}],transitions:[]};var g=new f;d.prototype.enter=function(a){var b=a.getOwnerEntity();b&&b.rigidBodyComponent&&(g.setArray(this.velocity),b.rigidBodyComponent.setVelocity(g))},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(8);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Rigid Body Angular Velocity",name:"Set Rigid Body Angular Velocity",type:"physics",description:"Set the angular velocity of the rigid body component.",canTransition:!1,parameters:[{name:"Angular velocity",key:"velocity",type:"position",description:"Angular velocity to set.","default":[0,0,0]}],transitions:[]};var g=new f;d.prototype.enter=function(a){var b=a.getOwnerEntity();b&&b.rigidBodyComponent&&(g.setArray(this.velocity),b.rigidBodyComponent.setAngularVelocity(g))},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Compare Counter",name:"Compare Counter",type:"transitions",description:"Compares a counter with a value.",canTransition:!0,parameters:[{name:"Name",key:"name",type:"string",description:"Counter name."},{name:"Value",key:"value",type:"float",description:"Value to compare the counter with.","default":0},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[{key:"less",description:"State to transition to if the counter is smaller than the specified value."},{key:"equal",description:"State to transition to if the counter is the same as the specified value."},{key:"greater",description:"State to transition to if the counter is greater than the specified value."}]};var f={less:" < X",equal:" == X",greater:" > X"};d.getTransitionLabel=function(a,b){return f[a]?"On "+(b.options.name||"Counter")+f[a]:void 0},d.prototype.compare=function(a){var b=a.getFsm().getVariable(this.name),c=+this.value;b>c?a.send(this.transitions.greater):b===c?a.send(this.transitions.equal):a.send(this.transitions.less)},d.prototype.enter=function(a){this.everyFrame||this.compare(a)},d.prototype.update=function(a){this.everyFrame&&this.compare(a)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Compare 2 Counters",name:"Compare 2 Counters",type:"transitions",description:"Compares the value of 2 counters.",canTransition:!0,parameters:[{name:"First counter",key:"name1",type:"string",description:"First counter name."},{name:"Second counter",key:"name2",type:"string",description:"Second counter name."},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[{key:"less",description:"State to transition to if the first counter is smaller than the second counter."},{key:"equal",description:"State to transition to if the first counter is the same as the second counter."},{key:"greater",description:"State to transition to if the first counter is greater than the second counter."}]};var f={less:"<",equal:"==",greater:">"};d.getTransitionLabel=function(a,b){return f[a]?"On "+(b.options.name1||"Counter1")+" "+f[a]+" "+(b.options.name2||"counter2"):void 0},d.prototype.compare=function(a){var b=+a.getFsm().getVariable(this.name1),c=+a.getFsm().getVariable(this.name2);void 0!==b&&void 0!==c&&(b>c?a.send(this.transitions.greater):b===c?a.send(this.transitions.equal):a.send(this.transitions.less))},d.prototype.enter=function(a){this.everyFrame||this.compare(a)},d.prototype.update=function(a){this.everyFrame&&this.compare(a)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Counter",name:"Set Counter",type:"transitions",description:"Sets a counter to a value.",parameters:[{name:"Name",key:"name",type:"string",description:"Counter name."},{name:"Value",key:"value",type:"float",description:"Value to set the counter to.","default":0}],transitions:[]},d.prototype.enter=function(a){a.getFsm().defineVariable(this.name,+this.value)},d.prototype.cleanup=function(a){a.getFsm().removeVariable(this.name)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Increment Counter",name:"Increment Counter",type:"transitions",description:"Increments a counter with a value.",parameters:[{name:"Name",key:"name",type:"string",description:"Counter name."},{name:"Increment",key:"increment",type:"float",description:"Value to increment the counter with.","default":1},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[]},d.prototype.incrementCounter=function(a){var b=+this.increment;return void 0===a.getFsm().vars[this.name]?void a.getFsm().defineVariable(this.name,b):void a.getFsm().applyOnVariable(this.name,function(a){return a+b})},d.prototype.enter=function(a){this.everyFrame||this.incrementCounter(a)},d.prototype.update=function(a){this.everyFrame&&this.incrementCounter(a)},d.prototype.cleanup=function(a){a.getFsm().removeVariable(this.name)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Mute sounds",name:"Mute sounds",type:"sound",description:"Mute all sounds globally.",canTransition:!1,parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getWorld();if(b){var c=b.getSystem("SoundSystem");c&&c.mute()}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Unmute sounds",name:"Unmute sounds",type:"sound",description:"Unmute all sounds globally.",canTransition:!1,parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getWorld();if(b){var c=b.getSystem("SoundSystem");c&&c.unmute()}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Toggle mute sounds",name:"Toggle mute sounds",type:"sound",description:"Toggles mute of all sounds globally.",canTransition:!1,parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getWorld();if(b){var c=b.getSystem("SoundSystem");c&&(c.muted?c.unmute():c.mute())}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Start Timeline",name:"Start Timeline",type:"timeline",description:"Starts or resumes the timeline.",canTransition:!0,parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.hasComponent("TimelineComponent")&&b.timelineComponent.start()},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Pause Timeline",name:"Pause Timeline",type:"timeline",description:"Pauses the timeline.",canTransition:!0,parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.hasComponent("TimelineComponent")&&b.timelineComponent.pause()},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Stop Timeline",name:"Stop Timeline",type:"timeline",description:"Stops the timeline.",canTransition:!0,parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.hasComponent("TimelineComponent")&&b.timelineComponent.stop()},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Timeline Time",name:"Set Timeline Time",type:"timeline",description:"Sets the current time of the timeline.",canTransition:!0,parameters:[{name:"Time",key:"time",type:"float",description:"Timeline time to set.","default":0}],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b.hasComponent("TimelineComponent")&&b.timelineComponent.setTime(this.time)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Html Text",name:"Set Html Text",type:"fx",description:"Sets the contents of an HTML element.",parameters:[{name:"Entity (optional)",key:"entity",type:"entity",description:"Entity that has an HTML component."},{name:"Html element selector",key:"selector",type:"string",description:"Element selector to set text on.","default":"p"},{name:"Content",key:"content",type:"string",description:"Content to set.","default":"Hello"},{name:"Allow HTML",key:"html",type:"boolean",description:"Set to true if the content contains HTML. This will make the action use .innerHTML instead of .innerText.","default":!1}],transitions:[]},d.prototype.enter=function(a){var b=this.entity&&a.getEntityById(this.entity.entityRef)||a.getOwnerEntity();if(b&&b.htmlComponent&&this.selector.length>0)for(var c=b.htmlComponent.domElement.querySelectorAll(this.selector),d=0;d<c.length;d++){var e=c[d];this.html?e.innerHTML=this.content:e.innerText=this.content}},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.completed=!1}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"spriteAnimation",name:"Sprite Animation action",type:"texture",description:"Animates a texture spritesheet over time.",canTransition:!1,parameters:[{name:"Tiling",key:"tiling",type:"vec2",description:"The number of sprites in X and Y directions.","default":[8,8]},{name:"Start tile",key:"startTile",type:"int",description:"Initial tile for the animation. 0 is the first one and numTiles-1 is the last one.","default":0},{name:"End tile",key:"endTile",type:"int",description:"End tile for the animation. Set to -1 to indicate the last tile.","default":-1},{name:"Animation time",key:"animationTime",type:"float",min:1e-6,description:"The time it should take for the animation to cycle through all the tiles once.","default":1},{name:"Loops",key:"loops",type:"int",description:"The number times to loop through the tiles before the animation is complete. Set to -1 to animate indefinitely.",min:-1,"default":-1}],transitions:[{key:"complete",description:"State to transition to when the animation completes."}]},d.getTransitionLabel=function(){return"Sprite Animation complete"},d.prototype.enter=function(a){var b=a.getOwnerEntity(),c=b.meshRendererComponent;if(this.texture=null,c&&0!==c.materials.length){var d=c.materials[0];this.texture=d.getTexture("DIFFUSE_MAP"),this.texture&&(this.startTime=a.getTime(),this.completed=!1,this.texture.repeat.setDirect(1/this.tiling[0],1/this.tiling[1]))}},d.prototype.update=function(a){if(this.texture&&!this.completed){var b=a.getTime()-this.startTime,c=this.tiling[0]*this.tiling[1],d=this.endTile;-1===d?d=c:d++;var e=b/this.animationTime,f=Math.floor(e);if(e%=1,f>=this.loops&&-1!==this.loops)return this.completed=!0,void a.send(this.transitions.complete);var g=d-this.startTile,h=this.startTile/c;e*=g/c,e+=h;var i=Math.floor(this.tiling[0]*this.tiling[1]*e%this.tiling[1]),j=Math.floor(this.tiling[1]*e%this.tiling[1]);this.texture.offset.setDirect(i,j).mul(this.texture.repeat),this.texture.offset.y=-1/this.tiling[1]-this.texture.offset.y+1}},d.prototype.exit=function(){},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"pauseParticleSystem",name:"Pause Particle System",type:"misc",description:"Pauses the particle system on the entity.",canTransition:!1,parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b&&b.particleSystemComponent&&b.particleSystemComponent.pause()},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"stopParticleSystem",name:"Stop Particle System",type:"misc",description:"Stops the particle system on the entity.",canTransition:!1,parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b&&b.particleSystemComponent&&b.particleSystemComponent.stop()},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"startParticleSystem",name:"Start Particle System",type:"misc",description:"Starts / plays the particle system on the entity.",canTransition:!1,parameters:[],transitions:[]},d.prototype.enter=function(a){var b=a.getOwnerEntity();b&&b.particleSystemComponent&&b.particleSystemComponent.play()},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(152);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={parameters:[{name:"Entity",key:"entity",type:"entity",description:"Entity to move."},{name:"Amount X",key:"amountX",type:"float",description:"Amount to move on the X axis.","default":0},{name:"Amount Y",key:"amountY",type:"float",description:"Amount to move on the Y axis.","default":0},{name:"Amount Z",key:"amountZ",type:"float",description:"Amount to move on the Z axis.","default":0},{name:"Speed",key:"speed",type:"float",description:"Speed to multiply.","default":1},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[]},d.prototype.addPosition=function(a){if(this.entity){var b=a.getTpf(),c=f.getValue(this.amountX,a),d=f.getValue(this.amountY,a),e=f.getValue(this.amountZ,a);this.entity.transformComponent.transform.translation.addDirect(c*this.speed*b,d*this.speed*b,e*this.speed*b),this.entity.transformComponent.setUpdated()}},d.prototype.enter=function(a){this.everyFrame||this.addPosition(a)},d.prototype.update=function(a){this.everyFrame&&this.addPosition(a)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(152);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Add Variable",name:"Add Variable",type:"variables",description:"",parameters:[{name:"Variable",key:"variable",type:"identifier"},{name:"Amount",key:"amount",type:"float"},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!1}],transitions:[]},d.prototype.add=function(a){a.applyOnVariable(this.variable,function(b){return b+f.getValue(this.amount,a)}.bind(this))},d.prototype.enter=function(a){this.everyFrame||this.add(a)},d.prototype.update=function(a){this.everyFrame&&this.add(a)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.configure=function(a){this.everyFrame=a.everyFrame!==!1,this.entity=a.entity||null,this.variableX=a.variableX||null,this.variableY=a.variableY||null,this.variableZ=a.variableZ||null},d.external={parameters:[{name:"VariableX",key:"variableX",type:"identifier"},{name:"VariableY",key:"variableY",type:"identifier"},{name:"VariableZ",key:"variableZ",type:"identifier"},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[]},d.prototype.update=function(a){var b=this.entity.transformComponent.transform.translation;null!==this.entity&&(this.variableX&&a.applyOnVariable(this.variableX,function(){return b.x}),this.variableY&&a.applyOnVariable(this.variableY,function(){return b.y}),this.variableZ&&a.applyOnVariable(this.variableZ,function(){return b.z}))},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(152);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Multiply Variable",name:"Multiply Variable",type:"variables",description:"",parameters:[{name:"Variable",key:"variable",type:"identifier"},{name:"Amount",key:"amount",type:"float"},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame","default":!1}],transitions:[]},d.prototype.update=function(a){a.applyOnVariable(this.variable,function(b){return b*f.getValue(this.amount,a)}.bind(this))},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(152);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.configure=function(a){this.everyFrame=a.everyFrame!==!1,this.leftHand=a.leftHand||0,this.rightHand=a.rightHand||0,this.tolerance=a.tolerance||1e-4,this.lessThanEvent={channel:a.transitions.less},this.equalEvent={channel:a.transitions.equal},this.greaterThanEvent={channel:a.transitions.greater}},d.external={parameters:[{name:"Left hand value",key:"leftHand",type:"float"},{name:"Right hand value",key:"rightHand",type:"float"},{name:"Tolerance",key:"tolerance",type:"float","default":.001},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[{key:"less",description:"Event fired if left hand argument is smaller than right hand argument."},{key:"equal",description:"Event fired if both sides are approximately equal."},{key:"greater",description:"Event fired if left hand argument is greater than right hand argument."}]};var g={less:"On X < Y",equal:"On X == Y",greater:"On X > Y"};d.getTransitionLabel=function(a){return g[a]},d.prototype.compare=function(a){var b=f.getValue(this.leftHand,a),c=f.getValue(this.rightHand,a),d=c-b;Math.abs(d)<=this.tolerance?this.equalEvent.channel&&a.send(this.equalEvent.channel):d>0?this.lessThanEvent.channel&&a.send(this.lessThanEvent.channel):this.greaterThanEvent.channel&&a.send(this.greaterThanEvent.channel)},d.prototype.enter=function(a){this.everyFrame||this.compare(a)},d.prototype.update=function(a){this.everyFrame&&this.compare(a)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.configure=function(a){this.everyFrame=!!a.everyFrame,this.entity=a.entity||null,this.range=a.range||100},d.external={key:"Set Light Range",name:"Set Light Range",description:"Sets the range of a light.",parameters:[{name:"Entity",key:"entity",type:"entity",description:"Light entity."},{name:"Range",key:"range",type:"real",description:"Light range.","default":100,min:0},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[]},d.prototype.enter=function(){var a=this.entity;a&&a.lightComponent&&a.lightComponent.light&&(a.lightComponent.light.range=this.range)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(152);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.configure=function(a){this.everyFrame=!!a.everyFrame,this.entity=a.entity||null,this.amountX=a.amountX||0,this.amountY=a.amountY||0,this.amountZ=a.amountZ||0},d.external={key:"Set Position",name:"Set Position",parameters:[{name:"Entity",key:"entity",type:"entity",description:"Entity to move."},{name:"Amount X",key:"amountX",type:"float",description:"Position on the X axis.","default":0},{name:"Amount Y",key:"amountY",type:"float",description:"Position on the Y axis.","default":0},{name:"Amount Z",key:"amountZ",type:"float",description:"Position on the Z axis.","default":0},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[]},d.prototype.update=function(a){null!==this.entity&&(this.entity.transformComponent.transform.translation.setDirect(f.getValue(this.amountX,a),f.getValue(this.amountY,a),f.getValue(this.amountZ,a)),this.entity.transformComponent.setUpdated())},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(152);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.configure=function(a){this.everyFrame=!!a.everyFrame,this.entity=a.entity||null,this.amountX=a.amountX||0,this.amountY=a.amountY||0,this.amountZ=a.amountZ||0},d.external={name:"Set Rotation",key:"Set Rotation",parameters:[{name:"Entity",key:"entity",type:"entity",description:"Entity to move."},{name:"Amount X",key:"amountX",type:"float",description:"Amount to rotate on the X axis.","default":0},{name:"Amount Y",key:"amountY",type:"float",description:"Amount to rotate on the Y axis.","default":0},{name:"Amount Z",key:"amountZ",type:"float",description:"Amount to rotate on the Z axis.",
"default":0},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!0}],transitions:[]},d.prototype.setRotation=function(a){null!==this.entity&&(this.entity.transformComponent.transform.setRotationXYZ(f.getValue(this.amountX,a),f.getValue(this.amountY,a),f.getValue(this.amountZ,a)),this.entity.transformComponent.setUpdated())},d.prototype.enter=function(a){this.everyFrame||this.setRotation(a)},d.prototype.update=function(a){this.everyFrame&&this.setRotation(a)},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments)}var e=c(151),f=c(152);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.external={key:"Set Variable",name:"Set Variable",type:"variables",description:"",parameters:[{name:"Variable name",key:"variable",type:"identifier"},{name:"Value",key:"amount",type:"float"},{name:"On every frame",key:"everyFrame",type:"boolean",description:"Repeat this action every frame.","default":!1}],transitions:[]},d.prototype.enter=function(a){this.variable&&a.applyOnVariable(this.variable,function(){return f.getValue(this.amount,a)}.bind(this))},a.exports=d},function(a,b,c){var d=c(152);a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this.type="StateMachineComponent",this._machines=[],this._machinesById={},this.entity=null,this.vars={},this.system=null,this.time=0,this.entered=!1,this.active=!0}var e=c(20),f=c(86),g=c(44);d.prototype=Object.create(e.prototype),d.vars={},d.getVariable=function(a){return d.vars[a]},d.prototype.getVariable=function(a){return void 0!==this.vars[a]?this.vars[a]:d.getVariable(a)},d.applyOnVariable=function(a,b){d.vars[a]=b(d.vars[a])},d.prototype.applyOnVariable=function(a,b){void 0!==this.vars[a]?this.vars[a]=b(this.vars[a]):d.applyOnVariable(a,b)},d.prototype.defineVariable=function(a,b){this.vars[a]=b},d.prototype.removeVariable=function(a){delete this.vars[a]},d.applyOnVariable=function(a,b){this.vars[a]?this.vars[a]=b(this.vars[a]):d.vars[a]&&d.applyOnVariable(a,b)},d.prototype.addMachine=function(a){a.parent=this,a.setRefs(this),this._machines.push(a),this._machinesById[a.id]=a},d.prototype.removeMachine=function(a){a.recursiveRemove(),f.remove(this._machines,a),delete this._machinesById[a.id]},d.prototype.getMachineById=function(a){return this._machinesById[a]||null},d.prototype.init=function(){for(var a=0;a<this._machines.length;a++){var b=this._machines[a];b.setRefs(this),b.reset(),b.ready()}},d.prototype.doEnter=function(){for(var a=0;a<this._machines.length;a++){var b=this._machines[a];b.enter()}},d.prototype.kill=function(){for(var a=0;a<this._machines.length;a++){var b=this._machines[a];b.kill()}},d.prototype.cleanup=function(){for(var a=0;a<this._machines.length;a++){var b=this._machines[a];b.cleanup()}},d.prototype.update=function(){if(this.active)for(var a=0;a<this._machines.length;a++){var b=this._machines[a];b.update()}},d.prototype.pause=function(){this.active=!1,g.emit("goo.entity."+this.entity.name+".fsm.pause")},d.prototype.play=function(){this.active=!0,g.emit("goo.entity."+this.entity.name+".fsm.play")},a.exports=d},function(a,b,c){function d(a){e.call(this,"StateMachineSystem",["StateMachineComponent"]),this.engine=a,this.passive=!1,this.paused=!1,this.time=0,this.evalProxy={test:function(){console.log("test")}},this.priority=1e3;var b=["Left","Middle","Right"];this._inputStates=new Set,this._listeners={keydown:function(a){this._inputStates.add(a.which)}.bind(this),keyup:function(a){this._inputStates["delete"](a.which)}.bind(this),mousedown:function(a){this._inputStates.add(b[a.button])}.bind(this),mouseup:function(a){this._inputStates["delete"](b[a.button])}.bind(this)}}var e=c(42);d.prototype=Object.create(e.prototype),d.prototype.getInputState=function(a){return this._inputStates.has(a)},d.prototype.process=function(a,b){this.time+=b;for(var c=0;c<a.length;c++){var d=a[c].stateMachineComponent;d.entered||(d.doEnter(),d.entered=!0)}for(var c=0;c<a.length;c++){var d=a[c].stateMachineComponent;d.update(b)}},d.prototype.inserted=function(a){var b=a.stateMachineComponent;b.entity=a,b.system=this,b.init()},d.prototype.play=function(){if(this.passive=!1,!this.paused){for(var a=this._activeEntities,b=0;b<a.length;b++){var c=a[b].stateMachineComponent;c.entered=!1}for(var d in this._listeners)document.addEventListener(d,this._listeners[d]);this._inputStates.clear()}this.paused=!1},d.prototype.pause=function(){this.passive=!0,this.paused=!0},d.prototype.resume=d.prototype.play,d.prototype.stop=function(){this.passive=!0,this.paused=!1;for(var a=0;a<this._activeEntities.length;a++){var b=this._activeEntities[a].stateMachineComponent;b.kill(),b.cleanup()}this.time=0;for(var c in this._listeners)document.removeEventListener(c,this._listeners[c])},a.exports=d},function(a,b,c){function d(){e.apply(this,arguments),this._type="StateMachineComponent"}var e=c(88),f=c(273),g=c(55),h=c(6);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,e._registerClass("stateMachine",d),d.prototype._create=function(){return new f},d.prototype._remove=function(a){var b=a.stateMachineComponent;if(b){for(var c=b._machines.length-1;c>=0;c--){var d=b._machines[c];d.cleanup(),b.removeMachine(d)}b.cleanup()}a.clearComponent(this._type)},d.prototype.update=function(a,b,c){var d=this;return c=c||{},c.reload=!0,c.instantiate=!0,e.prototype.update.call(this,a,b,c).then(function(a){if(a){var e=[];return h.forEach(b.machines,function(a){e.push(d._load(a.machineRef,c))},null,"sortValue"),g.all(e).then(function(b){for(var c=0;c<b.length;c++)-1===a._machines.indexOf(b[c])&&a.addMachine(b[c]);for(var c=a._machines.length-1;c>=0;c--)-1===b.indexOf(a._machines[c])&&a.removeMachine(a._machines[c]);return a})}})},a.exports=d},function(a,b,c){c(275),c(146)}]);